language ESSENCE' 1.0

given n: int(1..)
letting let1 be 3 * n
find assign_FunctionAsRelation_RelationAsMatrix: matrix indexed by [int(1..let1), int(1..9)] of bool
branching on [assign_FunctionAsRelation_RelationAsMatrix]
such that
    sum([sum([toInt(assign_FunctionAsRelation_RelationAsMatrix[q14_1, q14_2]) * catchUndef(q14_2, 0)
                  | q14_1 : int(1..let1), q14_2 : int(1..9), q14_1 = 3 * i + 1])
         /
         (sum([toInt(assign_FunctionAsRelation_RelationAsMatrix[q35_1, q35_2]) * catchUndef(q35_2, 0)
                   | q35_1 : int(1..let1), q35_2 : int(1..9), q35_1 = 3 * i + 2])
          * 10
          +
          sum([toInt(assign_FunctionAsRelation_RelationAsMatrix[q56_1, q56_2]) * catchUndef(q56_2, 0)
                   | q56_1 : int(1..let1), q56_2 : int(1..9), q56_1 = 3 * i + 3]))
             | i : int(0..n - 1)])
    = 1,
    and([or([assign_FunctionAsRelation_RelationAsMatrix[q26_1, q26_2] /\ q26_1 = 3 * i + 1
                 | q26_1 : int(1..let1), q26_2 : int(1..9)])
             | i : int(0..n - 1)]),
    and([or([assign_FunctionAsRelation_RelationAsMatrix[q47_1, q47_2] /\ q47_1 = 3 * i + 2
                 | q47_1 : int(1..let1), q47_2 : int(1..9)])
             | i : int(0..n - 1)]),
    and([or([assign_FunctionAsRelation_RelationAsMatrix[q68_1, q68_2] /\ q68_1 = 3 * i + 3
                 | q68_1 : int(1..let1), q68_2 : int(1..9)])
             | i : int(0..n - 1)]),
    and([sum([toInt(or([assign_FunctionAsRelation_RelationAsMatrix[q8_1, q8_2] /\ (q8_1 = i /\ q8_2 = d)
                            | q8_1 : int(1..let1), q8_2 : int(1..9)]))
                  | i : int(1..3 * n)])
         <= (n + 1) / 3
             | d : int(1..9)]),
    and([1 =
         sum([toInt(assign_FunctionAsRelation_RelationAsMatrix[q9_1, q9_2])
                  | q9_1 : int(1..let1), q9_2 : int(1..9), q9_1 = q3])
             | q3 : int(1..let1)]),
    and([or([assign_FunctionAsRelation_RelationAsMatrix[q10_1, q10_2] /\ q10_2 = q5
                 | q10_1 : int(1..let1), q10_2 : int(1..9)])
             | q5 : int(1..9)])

$ Conjure's
$ {"finds": [{"Name": "assign"}], "givens": [{"Name": "n"}], "enumGivens": [], "enumLettings": [],
$  "lettings":
$      [[{"Name": "Index"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagInt": []},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                          {"Op":
$                               {"MkOpProduct":
$                                    {"AbstractLiteral":
$                                         {"AbsLitMatrix":
$                                              [{"DomainInt":
$                                                    [{"TagInt": []},
$                                                     [{"RangeBounded":
$                                                           [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                                            {"Constant": {"ConstantInt": [{"TagInt": []}, 2]}}]}]]},
$                                               [{"Constant": {"ConstantInt": [{"TagInt": []}, 3]}},
$                                                {"Reference":
$                                                     [{"Name": "n"},
$                                                      {"DeclNoRepr":
$                                                           ["Given", {"Name": "n"},
$                                                            {"DomainInt":
$                                                                 [{"TagInt": []},
$                                                                  [{"RangeLowerBounded":
$                                                                        {"Constant":
$                                                                             {"ConstantInt": [{"TagInt": []}, 1]}}}]]},
$                                                            {"NoRegion": []}]}]}]]}}}}]}]]}}],
$       [{"Name": "Digit"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagInt": []},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                          {"Constant": {"ConstantInt": [{"TagInt": []}, 9]}}]}]]}}],
$       [{"MachineName": ["let", 1, []]},
$        {"Op":
$             {"MkOpProduct":
$                  {"AbstractLiteral":
$                       {"AbsLitMatrix":
$                            [{"DomainInt":
$                                  [{"TagInt": []},
$                                   [{"RangeBounded":
$                                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                          {"Constant": {"ConstantInt": [{"TagInt": []}, 2]}}]}]]},
$                             [{"Constant": {"ConstantInt": [{"TagInt": []}, 3]}},
$                              {"Reference":
$                                   [{"Name": "n"},
$                                    {"DeclNoRepr":
$                                         ["Given", {"Name": "n"},
$                                          {"DomainInt":
$                                               [{"TagInt": []},
$                                                [{"RangeLowerBounded":
$                                                      {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]},
$                                          {"NoRegion": []}]}]}]]}}}}]],
$  "unnameds": [], "strategyQ": {"PickFirst": []}, "strategyA": {"PickAll": []},
$  "trailCompact":
$      [[1, 1, 1], [1, 1, 1], [1, 2, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]],
$  "nameGenState": [["let", 2], ["q", 78]], "nbExtraGivens": 0,
$  "representations":
$      [[{"Name": "n"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "assign"},
$        {"DomainFunction":
$             [{"Function_AsRelation": {"Relation_AsMatrix": []}},
$              [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_Surjective"],
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference":
$                                [{"MachineName": ["let", 1, []]},
$                                 {"Alias":
$                                      {"Op":
$                                           {"MkOpProduct":
$                                                {"AbstractLiteral":
$                                                     {"AbsLitMatrix":
$                                                          [{"DomainInt":
$                                                                [{"TagInt": []},
$                                                                 [{"RangeBounded":
$                                                                       [{"Constant":
$                                                                             {"ConstantInt": [{"TagInt": []}, 1]}},
$                                                                        {"Constant":
$                                                                             {"ConstantInt": [{"TagInt": []}, 2]}}]}]]},
$                                                           [{"Constant": {"ConstantInt": [{"TagInt": []}, 3]}},
$                                                            {"Reference":
$                                                                 [{"Name": "n"},
$                                                                  {"DeclHasRepr":
$                                                                       ["Given", {"Name": "n"},
$                                                                        {"DomainInt":
$                                                                             [{"TagInt": []},
$                                                                              [{"RangeLowerBounded":
$                                                                                    {"Constant":
$                                                                                         {"ConstantInt":
$                                                                                              [{"TagInt": []},
$                                                                                               1]}}}]]}]}]}]]}}}}}]}]}]]},
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Constant": {"ConstantInt": [{"TagInt": []}, 9]}}]}]]}]}]],
$  "representationsTree":
$      [[{"Name": "assign"},
$        [{"rootLabel": {"Function_AsRelation": {"Relation_AsMatrix": []}},
$          "subForest": [{"rootLabel": null, "subForest": []}, {"rootLabel": null, "subForest": []}]}]],
$       [{"Name": "n"}, [{"rootLabel": null, "subForest": []}]]],
$  "originalDomains":
$      [[{"Name": "n"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "assign"},
$        {"DomainFunction":
$             [[], [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_Surjective"],
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference": [{"MachineName": ["let", 1, []]}, null]}]}]]},
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Constant": {"ConstantInt": [{"TagInt": []}, 9]}}]}]]}]}]],
$  "trailGeneralised":
$      [[6484388432455324657, -7933317039694892760], [-3392469592365912449, 6763367641224995547],
$       [2250845235860242351, -47892271799929175], [-548927451828732373, 6071287505006820677],
$       [7205191113288954633, -3311894758600605876], [-4866593241840010082, -6532550391600991720],
$       [-6386144991824239765, -4792870767923375055], [5225708519100513523, 2534346979770821438],
$       [1449851772812686302, -3659370651207345555], [-8458561045721684552, -4721643990517878664],
$       [6332810464448868337, -4091689424273970367], [-4839823094517118104, -4091689424273970367],
$       [7427353740912671790, 6404159943881384635], [3210028298654192182, 214406799545841563],
$       [-1315170080828276463, 610128551516476134], [-2837605303663784403, 189086409055666474],
$       [-8802176255134611581, 3243628039027233567], [8169070799079208675, 2350516286839746675],
$       [-7172215161805340148, 719148077267378297], [9133074560046147113, 3359484227825021473],
$       [5956764125592889197, 3729360841275832451], [-1864207342424538466, 6192492224972361528],
$       [-825177724921025421, 3359484227825021473], [2564343768259143288, 6192492224972361528],
$       [180834295752430202, -2649436558343742471], [2633404832434529843, 8833455179311704555],
$       [5994322158231448038, 2893713446170859312], [614345113406620065, -6216757785287672867],
$       [5285430852834459443, -5248364842394775710], [5484911418826199025, -118604048834998371],
$       [1094971475705677340, 7849131864364104925], [2615547653916120803, -1044804484074242927],
$       [-2725273314791601605, 6600555086828511420], [4541541902832568876, 2996461182498343157],
$       [8267317410267551568, 2996461182498343157], [-7814627985756971610, 4035186158831506965],
$       [-5699464601136262136, 4468520099499299106], [9036444675916223039, 3195618306930296254],
$       [4710217592880131263, -6603299330348180914], [-8170690059723935335, 4712637685423589863],
$       [-2835768469320724137, 2034664908226601334], [-7934988342567958809, -2959403128612997875],
$       [6265476061465819291, -813442018775599723], [5251046235716599099, -3130508972098084003],
$       [-7412420356075213371, 6792259599785396516], [4307883597241981078, -813442018775599723],
$       [-1301260160268861929, 6792259599785396516], [-386866185197819575, 8392764870335486679],
$       [-4935085795466093573, -6582536253240362740], [-1667101542256906040, 3485943209061869946],
$       [2493003844619441443, -3833841887696517103], [-965393146864029421, -4395636347661869846],
$       [-8631154318677411373, -4912732964986033415], [940761412036858883, 5878942210817943880],
$       [3302883405202467658, 271505933273685345], [1286158531819967593, 271505933273685345],
$       [-4281596652000563439, 518116107894042407], [-6674076144928220555, -5950888454701414455],
$       [4934288176921961592, -8672695384955777926], [2689626068798449384, -3393107769298855762],
$       [-1786005369919384150, 4015610445910317195], [-5695613501033165454, 4050044969305430053],
$       [479408015715390205, 6583360459620050081], [-1052948201379121558, -6807426268740286447],
$       [-5689336226806098898, -7353627564671843257], [-3645866107551562027, 6699008804443443224],
$       [5680537177142065876, -6807426268740286447], [-4536399716398040783, 6699008804443443224],
$       [8713870533530997283, 6931257879552741249], [-2886158498923034404, -4346434676363954423],
$       [3382097402552411077, 3450858297629567444], [220640574997530300, -8332555272624619079],
$       [2076421016288674644, 6671107133882086202], [-7558442551934748805, -7742459996478373313],
$       [4162811755526154910, -732219290591625144], [4294667051543267449, -1188912193335328127],
$       [-5250901017672774102, -732219290591625144], [-163379252758597364, 2859146222940867953],
$       [-7700123747931857225, -2929335780647482705], [8086307097453525105, -1901718289716865671],
$       [-7249103834622062460, 3551773744598839430], [5904251149125406228, -3087817286406945368],
$       [-4356539684774022777, -8438055240862190397], [-3023907251027687964, 3665653418050296083],
$       [-9256621350455701, 8616205835321029909], [-8688825217446187235, 9102891695271340773],
$       [-5307688777767945858, -5560291232127369028], [4339716052423987629, 8616205835321029909],
$       [-1644710329554198405, -2062074097620209752], [-4315096924707874376, -2437239138737822036],
$       [-1900708882096541984, 5811063233612538016], [4101038269971435692, 3298561641792293709],
$       [-1034524857106329851, 470558566760666840], [7913715448475576750, 7015079720634662913],
$       [-5241066350029487089, 470558566760666840], [8605663044520854273, 3382813182069399833],
$       [-1141228985487876270, 7015079720634662913], [-6018872406479404042, -6308301374977845565],
$       [2837935532525927256, -3895639850380188679], [2748967297559018788, -8462382345355940616],
$       [1902002174870317583, -686412044682121960], [-2627192086929018682, -4297708080110609884],
$       [5484370991406642468, 2637028273788087134], [4916730505758227244, -4627688322091716354],
$       [1154131301888998022, 6223916945069718080], [-2464425604519931121, 1068700198003755196]],
$  "trailVerbose": [], "trailRewrites": []}
