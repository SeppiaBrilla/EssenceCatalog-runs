language Essence 1.3

letting templates be new type enum {templates_1, templates_2}
letting design be
        function((templates_1, 1) --> 0, (templates_1, 2) --> 0, (templates_1, 3) --> 0, (templates_1, 4) --> 0,
                 (templates_1, 5) --> 0, (templates_1, 6) --> 0, (templates_1, 7) --> 0, (templates_1, 8) --> 0,
                 (templates_1, 9) --> 0, (templates_1, 10) --> 0, (templates_1, 11) --> 0, (templates_1, 12) --> 0,
                 (templates_1, 13) --> 0, (templates_1, 14) --> 0, (templates_1, 15) --> 0, (templates_1, 16) --> 0,
                 (templates_1, 17) --> 0, (templates_1, 18) --> 0, (templates_1, 19) --> 0, (templates_1, 20) --> 0,
                 (templates_1, 21) --> 0, (templates_1, 22) --> 0, (templates_1, 23) --> 0, (templates_1, 24) --> 0,
                 (templates_1, 25) --> 0, (templates_1, 26) --> 0, (templates_1, 27) --> 0, (templates_1, 28) --> 0,
                 (templates_1, 29) --> 0, (templates_1, 30) --> 0, (templates_2, 1) --> 40, (templates_2, 2) --> 40,
                 (templates_2, 3) --> 33, (templates_2, 4) --> 33, (templates_2, 5) --> 33, (templates_2, 6) --> 33,
                 (templates_2, 7) --> 22, (templates_2, 8) --> 15, (templates_2, 9) --> 15, (templates_2, 10) --> 15,
                 (templates_2, 11) --> 15, (templates_2, 12) --> 13, (templates_2, 13) --> 13, (templates_2, 14) --> 13,
                 (templates_2, 15) --> 13, (templates_2, 16) --> 13, (templates_2, 17) --> 13, (templates_2, 18) --> 12,
                 (templates_2, 19) --> 12, (templates_2, 20) --> 12, (templates_2, 21) --> 12, (templates_2, 22) --> 10,
                 (templates_2, 23) --> 10, (templates_2, 24) --> 10, (templates_2, 25) --> 10, (templates_2, 26) --> 10,
                 (templates_2, 27) --> 10, (templates_2, 28) --> 10, (templates_2, 29) --> 9, (templates_2, 30) --> 9)
letting printings be function(templates_1 --> 0, templates_2 --> 7)
