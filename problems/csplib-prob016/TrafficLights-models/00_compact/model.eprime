language ESSENCE' 1.0

letting n_roads be 4
find valid_Function1D_1: matrix indexed by [int(1..4)] of int(1..4)
find valid_Function1D_2: matrix indexed by [int(1..4)] of int(1, 4)
branching on [valid_Function1D_1, valid_Function1D_2]
such that
    and([(valid_Function1D_1[i] = 1 /\ valid_Function1D_2[i] = 1 \/
          valid_Function1D_1[1 + i % 4] = 1 /\ valid_Function1D_2[1 + i % 4] = 1)
         /\
         (valid_Function1D_1[i] = 4 /\ valid_Function1D_2[i] = 4 \/
          valid_Function1D_1[1 + i % 4] = 4 /\ valid_Function1D_2[1 + i % 4] = 4)
         /\
         ((1 = valid_Function1D_1[i] /\ 1 = valid_Function1D_2[i] \/
           4 = valid_Function1D_1[i] /\ 4 = valid_Function1D_2[i])
          /\
          (1 = valid_Function1D_1[1 + i % 4] /\ 1 = valid_Function1D_2[1 + i % 4] \/
           4 = valid_Function1D_1[1 + i % 4] /\ 4 = valid_Function1D_2[1 + i % 4]))
         \/
         (valid_Function1D_1[i] = 2 /\ valid_Function1D_2[i] = 1 \/
          valid_Function1D_1[1 + i % 4] = 2 /\ valid_Function1D_2[1 + i % 4] = 1)
         /\
         (valid_Function1D_1[i] = 3 /\ valid_Function1D_2[i] = 1 \/
          valid_Function1D_1[1 + i % 4] = 3 /\ valid_Function1D_2[1 + i % 4] = 1)
         /\
         ((2 = valid_Function1D_1[i] /\ 1 = valid_Function1D_2[i] \/
           3 = valid_Function1D_1[i] /\ 1 = valid_Function1D_2[i])
          /\
          (2 = valid_Function1D_1[1 + i % 4] /\ 1 = valid_Function1D_2[1 + i % 4] \/
           3 = valid_Function1D_1[1 + i % 4] /\ 1 = valid_Function1D_2[1 + i % 4]))
             | i : int(1..4)])

$ Conjure's
$ {"finds": [{"Name": "valid"}],
$  "givens": [],
$  "enumGivens": [],
$  "enumLettings":
$      [{"LettingDomainDefnEnum":
$            [{"Name": "Colours"}, [{"Name": "Red"}, {"Name": "RedYellow"}, {"Name": "Yellow"}, {"Name": "Green"}]]}],
$  "lettings":
$      [[{"Name": "n_roads"}, {"Constant": {"ConstantInt": [{"TagInt": []}, 4]}}],
$       [{"Name": "Road"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagInt": []},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                          {"Reference":
$                               [{"Name": "n_roads"},
$                                {"Alias": {"Constant": {"ConstantInt": [{"TagInt": []}, 4]}}}]}]}]]}}],
$       [{"Name": "Colours"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagEnum": "Colours"},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagEnum": "Colours"}, 1]}},
$                          {"Constant": {"ConstantInt": [{"TagEnum": "Colours"}, 4]}}]}]]}}],
$       [{"Name": "VehicleColours"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagEnum": "Colours"},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagEnum": "Colours"}, 1]}},
$                          {"Constant": {"ConstantInt": [{"TagEnum": "Colours"}, 4]}}]}]]}}],
$       [{"Name": "PedestrianColours"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagEnum": "Colours"},
$                   [{"RangeSingle": {"Constant": {"ConstantInt": [{"TagEnum": "Colours"}, 1]}}},
$                    {"RangeSingle": {"Constant": {"ConstantInt": [{"TagEnum": "Colours"}, 4]}}}]]}}]],
$  "unnameds": [],
$  "strategyQ": {"PickFirst": []},
$  "strategyA": {"Compact": []},
$  "trailCompact":
$      [[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]],
$  "trailVerbose": [],
$  "trailRewrites": [],
$  "nameGenState": [["q", 15]],
$  "nbExtraGivens": 0,
$  "representations":
$      [[{"Name": "valid"},
$        {"DomainFunction":
$             [{"Function_1D": []}, [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference":
$                                [{"Name": "n_roads"},
$                                 {"Alias": {"Constant": {"ConstantInt": [{"TagInt": []}, 4]}}}]}]}]]},
$              {"DomainTuple":
$                   [{"DomainInt":
$                         [{"TagEnum": "Colours"},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagEnum": "Colours"}, 1]}},
$                                 {"Constant": {"ConstantInt": [{"TagEnum": "Colours"}, 4]}}]}]]},
$                    {"DomainInt":
$                         [{"TagEnum": "Colours"},
$                          [{"RangeSingle": {"Constant": {"ConstantInt": [{"TagEnum": "Colours"}, 1]}}},
$                           {"RangeSingle": {"Constant": {"ConstantInt": [{"TagEnum": "Colours"}, 4]}}}]]}]}]}]],
$  "representationsTree":
$      [[{"Name": "valid"},
$        [{"rootLabel": {"Function_1D": []},
$          "subForest":
$              [{"rootLabel": null,
$                "subForest": []},
$               {"rootLabel": null,
$                "subForest":
$                    [{"rootLabel": null,
$                      "subForest": []},
$                     {"rootLabel": null,
$                      "subForest": []}]}]}]]],
$  "originalDomains":
$      [[{"Name": "valid"},
$        {"DomainFunction":
$             [[], [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference": [{"Name": "n_roads"}, null]}]}]]},
$              {"DomainTuple":
$                   [{"DomainEnum": [{"Name": "Colours"}, null, null]},
$                    {"DomainEnum":
$                         [{"Name": "Colours"},
$                          [{"RangeSingle": {"Reference": [{"Name": "Red"}, null]}},
$                           {"RangeSingle": {"Reference": [{"Name": "Green"}, null]}}],
$                          null]}]}]}]],
$  "questionAnswered": []}
