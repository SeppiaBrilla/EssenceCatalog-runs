language ESSENCE' 1.0

given n: int
find edges_RelationAsSet_ExplicitVarSizeWithMarker_Marker: int(0..n * n)
find edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_1: matrix indexed by [int(1..n * n)] of int(1..n)
find edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_2: matrix indexed by [int(1..n * n)] of int(1..n)
find degrees_FunctionAsRelation_RelationAsMatrix: matrix indexed by [int(1..n), int(1..n)] of bool
branching on [degrees_FunctionAsRelation_RelationAsMatrix]
such that
    and([or([degrees_FunctionAsRelation_RelationAsMatrix[q48_1, q48_2] /\
             (q48_1 = i /\
              q48_2 =
              sum([toInt(or([q50 <= edges_RelationAsSet_ExplicitVarSizeWithMarker_Marker /\
                             (edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_1[q50] = i /\
                              edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q50] = j)
                                 | q50 : int(1..n * n)]))
                       | j : int(1..n)]))
                 | q48_1 : int(1..n), q48_2 : int(1..n)])
             | i : int(1..n)]),
    and([or([degrees_FunctionAsRelation_RelationAsMatrix[q12_1, q12_2] /\
             (q12_1 = i /\
              or([degrees_FunctionAsRelation_RelationAsMatrix[q14_1, q14_2] /\ (q14_1 = i - 1 /\ q14_2 >= q12_2)
                      | q14_1 : int(1..n), q14_2 : int(1..n)]))
                 | q12_1 : int(1..n), q12_2 : int(1..n)])
             | i : int(2..n)]),
    and([sum([toInt(or([q19 <= edges_RelationAsSet_ExplicitVarSizeWithMarker_Marker /\
                        (edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_1[q19] = i /\
                         edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q19] = j)
                            | q19 : int(1..n * n)])),
              toInt(or([q21 <= edges_RelationAsSet_ExplicitVarSizeWithMarker_Marker /\
                        (edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_1[q21] = i /\
                         edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q21] = k)
                            | q21 : int(1..n * n)])),
              toInt(or([q23 <= edges_RelationAsSet_ExplicitVarSizeWithMarker_Marker /\
                        (edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_1[q23] = i /\
                         edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q23] = l)
                            | q23 : int(1..n * n)])),
              toInt(or([q25 <= edges_RelationAsSet_ExplicitVarSizeWithMarker_Marker /\
                        (edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_1[q25] = j /\
                         edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q25] = k)
                            | q25 : int(1..n * n)])),
              toInt(or([q27 <= edges_RelationAsSet_ExplicitVarSizeWithMarker_Marker /\
                        (edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_1[q27] = j /\
                         edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q27] = l)
                            | q27 : int(1..n * n)])),
              toInt(or([q29 <= edges_RelationAsSet_ExplicitVarSizeWithMarker_Marker /\
                        (edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_1[q29] = k /\
                         edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q29] = l)
                            | q29 : int(1..n * n)]));
                  int(1..6)])
         <= 4
         /\
         and([!([i, i, i, j, j, k; int(1..6)][q15] = [i, i, i, j, j, k; int(1..6)][q16] /\
                [j, k, l, k, l, l; int(1..6)][q15] = [j, k, l, k, l, l; int(1..6)][q16])
                  | q15 : int(1..6), q16 : int(1..6), q15 < q16])
             | i : int(1..n), j : int(1..n), k : int(1..n), l : int(1..n), i < j /\ j < k /\ k < l]),
    and([sum([toInt(degrees_FunctionAsRelation_RelationAsMatrix[q31_1, q31_2]) * catchUndef(q31_2, 0)
                  | q31_1 : int(1..n), q31_2 : int(1..n), q31_1 = i])
         % 3
         = 0
         /\
         or([degrees_FunctionAsRelation_RelationAsMatrix[q34_1, q34_2] /\ q34_1 = i
                 | q34_1 : int(1..n), q34_2 : int(1..n)])
             | i : int(1..n)]),
    sum([sum([toInt(degrees_FunctionAsRelation_RelationAsMatrix[q36_1, q36_2]) * catchUndef(q36_2, 0)
                  | q36_1 : int(1..n), q36_2 : int(1..n), q36_1 = i])
             | i : int(1..n)])
    % 12
    = 0,
    and([or([degrees_FunctionAsRelation_RelationAsMatrix[q39_1, q39_2] /\ q39_1 = i
                 | q39_1 : int(1..n), q39_2 : int(1..n)])
             | i : int(1..n)]),
    and([1 =
         sum([toInt(degrees_FunctionAsRelation_RelationAsMatrix[q40_1, q40_2])
                  | q40_1 : int(1..n), q40_2 : int(1..n), q40_1 = q3])
             | q3 : int(1..n)]),
    and([q8 + 1 <= edges_RelationAsSet_ExplicitVarSizeWithMarker_Marker ->
         flatten([[edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_1[q8]; int(1)],
                  [edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q8]; int(1)];
                      int(1..2)])
         <lex
         flatten([[edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_1[q8 + 1]; int(1)],
                  [edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q8 + 1]; int(1)];
                      int(1..2)])
             | q8 : int(1..n * n - 1)]),
    and([q9 > edges_RelationAsSet_ExplicitVarSizeWithMarker_Marker ->
         edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_1[q9] = 1 /\
         edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q9] = 1
             | q9 : int(1..n * n)]),
    and([!or([q42 <= edges_RelationAsSet_ExplicitVarSizeWithMarker_Marker /\
              (edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_1[q42] = q5 /\
               edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q42] = q5)
                  | q42 : int(1..n * n)])
             | q5 : int(1..n)]),
    and([or([q44 <= edges_RelationAsSet_ExplicitVarSizeWithMarker_Marker /\
             (edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_1[q44] = q5 /\
              edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q44] = q6)
                 | q44 : int(1..n * n)])
         ->
         or([q46 <= edges_RelationAsSet_ExplicitVarSizeWithMarker_Marker /\
             (edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_1[q46] = q6 /\
              edges_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q46] = q5)
                 | q46 : int(1..n * n)])
             | q5 : int(1..n), q6 : int(1..n)])

$ Conjure's
$ {"finds": [{"Name": "edges"}, {"Name": "degrees"}], "givens": [{"Name": "n"}], "enumGivens": [], "enumLettings": [],
$  "lettings":
$      [[{"Name": "NODE"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagInt": []},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                          {"Reference":
$                               [{"Name": "n"},
$                                {"DeclNoRepr":
$                                     ["Given", {"Name": "n"}, {"DomainInt": [{"TagInt": []}, []]},
$                                      {"NoRegion": []}]}]}]}]]}}]],
$  "unnameds": [], "strategyQ": {"PickFirst": []}, "strategyA": {"PickAll": []},
$  "trailCompact":
$      [[1, 1, 1], [1, 1, 1], [1, 2, 2], [1, 1, 1], [1, 2, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]],
$  "nameGenState": [["q", 51]], "nbExtraGivens": 0,
$  "representations":
$      [[{"Name": "n"}, {"DomainInt": [{"TagInt": []}, []]}],
$       [{"Name": "degrees"},
$        {"DomainFunction":
$             [{"Function_AsRelation": {"Relation_AsMatrix": []}},
$              [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference":
$                                [{"Name": "n"},
$                                 {"DeclHasRepr": ["Given", {"Name": "n"}, {"DomainInt": [{"TagInt": []}, []]}]}]}]}]]},
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference":
$                                [{"Name": "n"},
$                                 {"DeclHasRepr":
$                                      ["Given", {"Name": "n"}, {"DomainInt": [{"TagInt": []}, []]}]}]}]}]]}]}],
$       [{"Name": "edges"},
$        {"DomainRelation":
$             [{"Relation_AsSet": {"Set_ExplicitVarSizeWithMarker": []}},
$              [{"SizeAttr_None": []}, ["BinRelAttr_Irreflexive", "BinRelAttr_Symmetric"]],
$              [{"DomainInt":
$                    [{"TagInt": []},
$                     [{"RangeBounded":
$                           [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                            {"Reference":
$                                 [{"Name": "n"},
$                                  {"DeclHasRepr": ["Given", {"Name": "n"}, {"DomainInt": [{"TagInt": []}, []]}]}]}]}]]},
$               {"DomainInt":
$                    [{"TagInt": []},
$                     [{"RangeBounded":
$                           [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                            {"Reference":
$                                 [{"Name": "n"},
$                                  {"DeclHasRepr":
$                                       ["Given", {"Name": "n"}, {"DomainInt": [{"TagInt": []}, []]}]}]}]}]]}]]}]],
$  "representationsTree":
$      [[{"Name": "degrees"},
$        [{"rootLabel": {"Function_AsRelation": {"Relation_AsMatrix": []}},
$          "subForest": [{"rootLabel": null, "subForest": []}, {"rootLabel": null, "subForest": []}]}]],
$       [{"Name": "edges"},
$        [{"rootLabel": {"Relation_AsSet": {"Set_ExplicitVarSizeWithMarker": []}},
$          "subForest": [{"rootLabel": null, "subForest": []}, {"rootLabel": null, "subForest": []}]}]],
$       [{"Name": "n"}, [{"rootLabel": null, "subForest": []}]]],
$  "originalDomains":
$      [[{"Name": "n"}, {"DomainInt": [{"TagInt": []}, []]}],
$       [{"Name": "edges"},
$        {"DomainRelation":
$             [[], [{"SizeAttr_None": []}, ["BinRelAttr_Irreflexive", "BinRelAttr_Symmetric"]],
$              [{"DomainInt":
$                    [{"TagInt": []},
$                     [{"RangeBounded":
$                           [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                            {"Reference": [{"Name": "n"}, null]}]}]]},
$               {"DomainInt":
$                    [{"TagInt": []},
$                     [{"RangeBounded":
$                           [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                            {"Reference": [{"Name": "n"}, null]}]}]]}]]}],
$       [{"Name": "degrees"},
$        {"DomainFunction":
$             [[], [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}, {"Reference": [{"Name": "n"}, null]}]}]]},
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference": [{"Name": "n"}, null]}]}]]}]}]],
$  "trailGeneralised":
$      [[-4977931963614137949, -2802589657389629891], [-6854634790374064408, -836028324444208492],
$       [6713245289444102459, -4482844777776564771], [-3587144915593821511, -1605511624902291475],
$       [2285830424242546983, 9032581089178924972], [-7848283918692902603, -8417067027953672453],
$       [-2619464118644127577, -546198899477470248], [5367773701188900215, -2173540087763975257],
$       [-1462007020393984676, -1452365329680414334], [-7046917278358781627, -836028324444208492],
$       [-8535354198857399211, -7263670022683066629], [-3638401353467317224, -4482844777776564771],
$       [5659665897416478856, -6391427249619986797], [4883473741307005831, 8302552067728528733],
$       [4511412652511694623, 586774750830766024], [3133554058700350478, -5206779955322695514],
$       [-3964165627304893391, 2298032825041285380], [1008067822787893125, 7043851525017187604],
$       [4850578297763553232, -5463983876109147431], [-1484327328625310710, -4683240992122961769],
$       [-5133382893520002779, 4661970893694496781], [1305942821421352967, -4672523074220083672],
$       [-3008804503898017824, -407763536541915629], [1034426516493150624, -4779819481926649352],
$       [309612266591651366, -6403838666000127985], [-7356314576485242029, 5994774723451638190],
$       [8642833957785729215, 8177493569432109744], [7694120643050368246, -9112047119819699139],
$       [-8656545874139602074, 3920630640647188304], [190745831298584009, -7389239331920225981],
$       [-2295367328088220015, 5983655974722283444], [7286288303010100539, -3244213360519094409],
$       [4687558624140850984, -1188027473492379388], [-2949124047402986904, 2586350505640226384],
$       [-5122188559666656548, -4710085590315737293], [-8576116130507170932, 4627240939377804057],
$       [7872753233990105164, -5261669381995882075], [-6142926772785567290, -6701859363289516192],
$       [-7946941677014903711, 8137898925295782139], [7357031969651942041, 2601488170496453120],
$       [5428126883464129683, 5468233203906957271], [-6920115934704327242, 6359981688506548170],
$       [-2953453552505795872, 8793256519297865420], [6302628338060825260, -7452777546363146487],
$       [5568787116350913123, -453089745756486858], [-8893911343692914936, -6060324720470055290],
$       [-2655742041007925928, -1935065540931329530], [-7378090860974605066, -7405152644901099145],
$       [6633036476186498782, -6852158345561084110], [447175195506204588, -5490743950570521159],
$       [1758750528813770100, 7305453624508119092], [-8789400399743767924, 3606842815310710220],
$       [-6465947552324016131, -8438055240862190397], [327012560166203290, -390618485947665543],
$       [3217673076064619671, 4629503979282901005], [4016318408637690953, -336423870440031277],
$       [7571000347477281686, -1435261657319296412], [8952083478140087967, 4629503979282901005],
$       [-1535818210370531970, 2381505525013314919], [-791224764462063352, -980183734219045807],
$       [138340401113726204, 1343858186563409922], [4984773300583808918, 7975706307908949399],
$       [6412796545469528762, 8256674559880749693], [9013754451892359905, -4088888427163340346],
$       [4127995676530378280, -2944019900231872627], [-3848257329646272010, 2949628743332469088],
$       [-3108864291017938535, -1616723119370965319], [2843123997524539232, -1616723119370965319],
$       [7500116386956261844, 5547044641922559437], [2711963882444078369, -1645765959203526738],
$       [316202957422443338, 3191999583396109358], [4893109734880754132, -4312690825011016942],
$       [1662444492757553515, 2410252264190709236], [6663294017510450687, 8322730167021458687],
$       [7150736098180280726, -6587086121713626763], [4436787897937535799, 1001956096992500093],
$       [-3782373507733384071, 585031355758111915], [7049390291704046372, 904282280797762228],
$       [3900811293769149029, 1001956096992500093], [4397760638365448376, 904282280797762228],
$       [4647573343145366368, 494626593364767531], [4124788352366916975, -6802328433215704087],
$       [7164043194028104124, -4832045910001444618], [4921744046530755369, 6611756500911136265],
$       [-120158308001554251, -2308122775759336402], [-7864654140403898381, -5729027337822823870],
$       [3582282507083991016, -9143034386289270805], [-6679119768890545776, 4804294895229721825],
$       [-3548281116684409092, 3891575896849286073], [-6251474046315684795, 6575280880762557177],
$       [8353713631551171471, -1146284494773653884], [-5440707713530616842, -861390733820661347],
$       [677102782030425963, -861390733820661347], [-8412852090818947831, -4833790246545308745],
$       [-7397853269295751671, -4850233929261379311], [-2815315394264928784, -3687465432716445844],
$       [-8834869582770445018, 3075167765966179376], [-3247853715770196875, 7433948041424441392],
$       [7159930579088349792, -1729018033166017080], [-650350868327995441, -50308699869394127],
$       [-404658947671863854, -2651463739724729399], [-4649886947451496590, 6685628371725754557],
$       [-2957505305952146769, -9220416776745022080], [-4394316978822346408, -2651463739724729399],
$       [-5541928457460544779, -9220416776745022080], [-3007412519480182795, 2646483085698274585],
$       [-5340490465294794581, 5122043551303946820], [5776216558788136132, 3020284744433914558],
$       [-3470367485993063021, -1387988584260019445], [-89321316909691426, 4220550467610003451],
$       [-6981500982818932026, 2495528787734046104], [-6306212882460010004, 6335511930183574719],
$       [2502922931155944472, -5932734664974794107], [1012848381219813721, 4779260154466733127],
$       [-4692816154481547871, 1911056472132920359], [-2330578956529676025, -5440766981977635525],
$       [-7533754567518487157, 4330601802622547231], [-3757023583314536477, -6572830584286608877],
$       [-501540498254131, -6850306265206133089], [4068681102731930806, 5168062591030038878],
$       [-2636588382589109526, -8575082180409315760], [-7378923326690142966, -8438055240862190397],
$       [4477812903348318136, 4188456995506759487], [-188092621288475978, 7883604451222177362],
$       [-270322922023037714, 1120672032382838072], [-4774083287466593490, -8438055240862190397],
$       [-5374588197845272984, 132173285179212587], [-1281830584084348966, 4887014471778841870],
$       [6335412757281869670, 4643264918958860696], [4936380208722531430, -8438055240862190397],
$       [-1052995290266737916, -8888471640559980993], [-5041380679969079606, 6118670654026292762],
$       [5434869590235943364, 2355079800479983432], [993990222615566722, -8438055240862190397],
$       [8037214745583268120, 6335467968852420115], [9204397391311185390, -5977758051168540982],
$       [-2636287547508316904, -4284333159173837012], [4013920868706979142, -8438055240862190397],
$       [-2324022164854875204, 355399355529450339], [3654891144717104578, -1047377404074600990],
$       [-1281277401129612652, -6986794182187296720], [-7252451775045017710, -8438055240862190397],
$       [-8263125832649218032, 5380531153213825627], [-3394531988137739609, -205733053734802508],
$       [-4776723733725604077, -2753604145829750790], [-7794744223526753351, -3850161644359033596],
$       [2245028538757002725, -5875697334349629140], [7770841355592813909, -5774154169194834326],
$       [4213463521382585901, 2044158718854351360], [-8107124633646981937, -697369781700478516],
$       [-6140724086899054834, -5432454878675802509], [-2732211556564831325, 1196184165669697301],
$       [-44034300717971960, -3226310455890877177], [-8907605868284624602, -5328273739222712610],
$       [-2574348302170971426, -7338881395798069479], [-3906360371861117278, -2876796838200370810],
$       [1721055566072406978, 1792291575972328895], [-7049794147994525061, 1432156412254633957],
$       [1338841109101373662, -4941468986075752761], [-470743674977086892, 7867075653056439258],
$       [-5620827947913832372, 1610017326789550965], [-5794194573256186684, 8516324753167390272],
$       [7057103153925462396, -3537606994538417029], [621177879637615917, -3785139271259861751],
$       [7833594744338397486, -7392655694554427737], [4530429714388671576, 2725592844050475362],
$       [623951850760611032, -1919004546764247243], [2186557417859602648, -3593574103492430706],
$       [-7742660315757107296, -9132972834923329761], [986518056489829423, -4356284365953256411],
$       [1153768082088352232, -3076190567981618561], [-8386234766915222474, 8848637562320810222],
$       [7372498713216253382, 9130455884919189145], [398009219880489124, -1878828073680739744],
$       [1638908843959642006, 5051955716155788279], [2425102660673315761, -6648378593733035111],
$       [5797911320327077064, 4309819994147508299], [4843602316007486722, 5259059543615376186],
$       [-4583007175319730302, 5694719877272335501], [-9102114479276041216, -4325309589581683858],
$       [167389065353262754, 7715581515542755591], [2939521529210546445, -542228379351194427],
$       [5868878707192348702, 4908331428319712023], [-644432878060612576, -8341805108694970278],
$       [8165490353096557256, -8172029350784701347], [3829500161437378378, 3459028389642920176],
$       [-5324013595353547765, -3136940214397562604], [-4610405440591196965, -7368739862477411465],
$       [-1546036580922433807, -8202538988328419201], [1479088568749879370, -8287159868855573233],
$       [-3023195281009673628, 229366905120124741], [-1095270307826485973, -7240233311915946963],
$       [-3576175467805586562, -5042099076401432213], [5399570349442368671, -6931046631052728051],
$       [-3550788144897325843, 1590916362393417328], [3653113290115232303, 675014188187185045],
$       [-3483027276723727964, 1732417538452331488], [-8075588906304009824, -7433852386945603374],
$       [8851583011527973180, 6037024086775798358], [4167636673106925236, 8297809263639021332],
$       [495754939008871807, 6165543478140027089], [8951855937755619356, 1501666186242799428],
$       [-5768398715818929041, 45238902386623245], [-2066843889447057234, -578208255771285435],
$       [-6334141580624594171, 7184419662636897476], [2104510721169370510, 5163955276569623389],
$       [-110638106163088534, 1501666186242799428], [-6882641673570681522, -8190497823475663125],
$       [-7805435525972415281, 7184419662636897476], [6662436295145182407, 6436241138722585043],
$       [4573755292015889654, 5163955276569623389], [4294026405248844970, -1918385056857211961],
$       [8550928700170901294, -7806126463290939859], [-1607158931832944174, -975471371408363878],
$       [-8040104033426726096, -1310294929672113991], [-7161022346513091919, 45238902386623245],
$       [-8845347899092927143, -4919214519681766021], [-7936750757312990979, -8187095206052531721],
$       [1814089830609985057, 3558610224987955766], [-2196643104720207881, 957115614720974815],
$       [-674328692964016350, 2268292839294495475], [-5548251632954675870, -5758558566314890415],
$       [31659597541550763, 4207009678491869010], [9069988565345412944, 8965724539225652414],
$       [-7349110628473817720, -1283343838098582726], [5115775814277408243, -8121825376957859116]],
$  "trailVerbose": [], "trailRewrites": []}
