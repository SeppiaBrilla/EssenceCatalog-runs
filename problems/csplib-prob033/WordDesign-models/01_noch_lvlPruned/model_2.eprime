language ESSENCE' 1.0

find words_ExplicitVarSizeWithFlagsR10_Flags: matrix indexed by [int(1..4294967296)] of bool
find words_ExplicitVarSizeWithFlagsR10_Values_Function1D: matrix indexed by [int(1..4294967296), int(1..8)] of int(1..4)
branching on [words_ExplicitVarSizeWithFlagsR10_Flags, words_ExplicitVarSizeWithFlagsR10_Values_Function1D]
maximising sum([toInt(words_ExplicitVarSizeWithFlagsR10_Flags[q74]) | q74 : int(1..4294967296)])
such that
    and([words_ExplicitVarSizeWithFlagsR10_Flags[q66] ->
         sum([toInt(words_ExplicitVarSizeWithFlagsR10_Values_Function1D[q66, q69] = 2) | q69 : int(1..8)]) +
         sum([toInt(words_ExplicitVarSizeWithFlagsR10_Values_Function1D[q66, q72] = 3) | q72 : int(1..8)])
         = 4 | q66 : int(1..4294967296)]),
    and([words_ExplicitVarSizeWithFlagsR10_Flags[q42] /\ words_ExplicitVarSizeWithFlagsR10_Flags[q43] ->
         sum([toInt(and([sum([words_ExplicitVarSizeWithFlagsR10_Values_Function1D[q42, q44] | q44 : int(1..8), q44 = i])
                         !=
                         sum([words_ExplicitVarSizeWithFlagsR10_Values_Function1D[q43, q45]
                                  | q45 : int(1..8), q45 = i]),
                         or([q46 = i | q46 : int(1..8)]), or([q47 = i | q47 : int(1..8)]);
                             int(1..3)]))
                  | i : int(1..8)])
         >= 4
             | q42 : int(1..4294967296), q43 : int(1..4294967296), q43 > q42]),
    and([words_ExplicitVarSizeWithFlagsR10_Flags[q48] /\ words_ExplicitVarSizeWithFlagsR10_Flags[q49] ->
         sum([toInt(!or([and([1 =
                              sum([words_ExplicitVarSizeWithFlagsR10_Values_Function1D[q48, q50]
                                       | q50 : int(1..8), q50 = 9 - i])
                              /\
                              4 =
                              sum([words_ExplicitVarSizeWithFlagsR10_Values_Function1D[q49, q51]
                                       | q51 : int(1..8), q51 = i]),
                              or([q52 = 9 - i | q52 : int(1..8)]), or([q53 = i | q53 : int(1..8)]);
                                  int(1..3)]),
                         and([2 =
                              sum([words_ExplicitVarSizeWithFlagsR10_Values_Function1D[q48, q54]
                                       | q54 : int(1..8), q54 = 9 - i])
                              /\
                              3 =
                              sum([words_ExplicitVarSizeWithFlagsR10_Values_Function1D[q49, q55]
                                       | q55 : int(1..8), q55 = i]),
                              or([q56 = 9 - i | q56 : int(1..8)]), or([q57 = i | q57 : int(1..8)]);
                                  int(1..3)]),
                         and([3 =
                              sum([words_ExplicitVarSizeWithFlagsR10_Values_Function1D[q48, q58]
                                       | q58 : int(1..8), q58 = 9 - i])
                              /\
                              2 =
                              sum([words_ExplicitVarSizeWithFlagsR10_Values_Function1D[q49, q59]
                                       | q59 : int(1..8), q59 = i]),
                              or([q60 = 9 - i | q60 : int(1..8)]), or([q61 = i | q61 : int(1..8)]);
                                  int(1..3)]),
                         and([4 =
                              sum([words_ExplicitVarSizeWithFlagsR10_Values_Function1D[q48, q62]
                                       | q62 : int(1..8), q62 = 9 - i])
                              /\
                              1 =
                              sum([words_ExplicitVarSizeWithFlagsR10_Values_Function1D[q49, q63]
                                       | q63 : int(1..8), q63 = i]),
                              or([q64 = 9 - i | q64 : int(1..8)]), or([q65 = i | q65 : int(1..8)]);
                                  int(1..3)]);
                             int(1..4)]))
                  | i : int(1..8)])
         >= 4
             | q48 : int(1..4294967296), q49 : int(1..4294967296), q49 > q48]),
    and([words_ExplicitVarSizeWithFlagsR10_Flags[q27 + 1] ->
         flatten([[words_ExplicitVarSizeWithFlagsR10_Values_Function1D[q27, q33]; int(1)] | q33 : int(1..8)]) <lex
         flatten([[words_ExplicitVarSizeWithFlagsR10_Values_Function1D[q27 + 1, q34]; int(1)] | q34 : int(1..8)])
             | q27 : int(1..4294967295)]),
    and([words_ExplicitVarSizeWithFlagsR10_Flags[q28] = false ->
         and([words_ExplicitVarSizeWithFlagsR10_Values_Function1D[q28, q35] = 1 | q35 : int(1..8)])
             | q28 : int(1..4294967296)]),
    and([words_ExplicitVarSizeWithFlagsR10_Flags[q29 + 1] -> words_ExplicitVarSizeWithFlagsR10_Flags[q29]
             | q29 : int(1..4294967295)])

$ Conjure's
$ {"finds": [{"Name": "words"}],
$  "givens": [],
$  "enumGivens": [],
$  "enumLettings":
$      [{"LettingDomainDefnEnum": [{"Name": "Base"}, [{"Name": "A"}, {"Name": "C"}, {"Name": "G"}, {"Name": "T"}]]}],
$  "lettings":
$      [[{"Name": "Base"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagEnum": "Base"},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagEnum": "Base"}, 1]}},
$                          {"Constant": {"ConstantInt": [{"TagEnum": "Base"}, 4]}}]}]]}}],
$       [{"Name": "Index"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagInt": []},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                          {"Constant": {"ConstantInt": [{"TagInt": []}, 8]}}]}]]}}]],
$  "unnameds": [],
$  "strategyQ": {"PickFirst": []},
$  "strategyA": {"PickAll": []},
$  "trailCompact":
$      [[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 2, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]],
$  "trailVerbose": [],
$  "trailRewrites": [],
$  "nameGenState": [["q", 75]],
$  "nbExtraGivens": 0,
$  "representations":
$      [[{"Name": "words"},
$        {"DomainSet":
$             [{"Set_ExplicitVarSizeWithFlags": []}, {"SizeAttr_None": []},
$              {"DomainFunction":
$                   [{"Function_1D": []}, [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$                    {"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                 {"Constant": {"ConstantInt": [{"TagInt": []}, 8]}}]}]]},
$                    {"DomainInt":
$                         [{"TagEnum": "Base"},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagEnum": "Base"}, 1]}},
$                                 {"Constant": {"ConstantInt": [{"TagEnum": "Base"}, 4]}}]}]]}]}]}]],
$  "representationsTree":
$      [[{"Name": "words"},
$        [{"rootLabel": {"Set_ExplicitVarSizeWithFlags": []},
$          "subForest":
$              [{"rootLabel": {"Function_1D": []},
$                "subForest":
$                    [{"rootLabel": null,
$                      "subForest": []},
$                     {"rootLabel": null,
$                      "subForest": []}]}]}]]],
$  "originalDomains":
$      [[{"Name": "words"},
$        {"DomainSet":
$             [[], {"SizeAttr_None": []},
$              {"DomainFunction":
$                   [[], [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$                    {"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                 {"Constant": {"ConstantInt": [{"TagInt": []}, 8]}}]}]]},
$                    {"DomainEnum": [{"Name": "Base"}, null, null]}]}]}]],
$  "questionAnswered": []}
