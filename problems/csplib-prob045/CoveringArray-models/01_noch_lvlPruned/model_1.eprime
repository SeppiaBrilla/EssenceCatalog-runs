language ESSENCE' 1.0

given k: int(1..)
given b: int(1..)
given t: int(1..)
given g: int(2..)
where k >= t
where b >= g ** t
find CoverTest_ExplicitWithFlagsR10_Flags: matrix indexed by [int(1..b)] of int(0..b)
find CoverTest_ExplicitWithFlagsR10_Values_Function1D: matrix indexed by [int(1..b), int(1..k)] of int(1..g)
branching on [CoverTest_ExplicitWithFlagsR10_Flags, CoverTest_ExplicitWithFlagsR10_Values_Function1D]
such that
    and([or([CoverTest_ExplicitWithFlagsR10_Flags[q16] > 0 /\
             and([CoverTest_ExplicitWithFlagsR10_Values_Function1D
                      [q16, testcase_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1[q18]]
                  = testcase_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q18]
                      | q18 : int(1..k * g),
                        q18 <= testcase_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker])
                 | q16 : int(1..b)])
             | testcase_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker : int(0..k * g),
               testcase_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1 : matrix indexed by [int(1..k
                                                                                                                        *
                                                                                                                        g)] of int(1..k),
               testcase_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_2 : matrix indexed by [int(1..k
                                                                                                                        *
                                                                                                                        g)] of int(1..g),
               and([q1 + 1 <= testcase_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker ->
                    flatten([[testcase_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1[q1]; int(1)],
                             [testcase_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q1]; int(1)];
                                 int(1..2)])
                    <lex
                    flatten([[testcase_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1[q1 + 1];
                                  int(1)],
                             [testcase_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q1 + 1];
                                  int(1)];
                                 int(1..2)])
                        | q1 : int(1..k * g - 1)]),
               and([q2 > testcase_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker ->
                    testcase_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1[q2] = 1 /\
                    testcase_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q2] = 1
                        | q2 : int(1..k * g)]),
               and([1 >=
                    sum([1   | q13 : int(1..k * g),
                               q13 <= testcase_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker,
                               testcase_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1[q13] = q4])
                        | q4 : int(1..k)]),
               sum([1   | q15 : int(1..k * g),
                          q15 <= testcase_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker])
               = t]),
    and([CoverTest_ExplicitWithFlagsR10_Flags[q6 + 1] > 0 ->
         flatten([[CoverTest_ExplicitWithFlagsR10_Values_Function1D[q6, q19]; int(1)] | q19 : int(1..k)]) <lex
         flatten([[CoverTest_ExplicitWithFlagsR10_Values_Function1D[q6 + 1, q20]; int(1)] | q20 : int(1..k)])
             | q6 : int(1..b - 1)]),
    and([CoverTest_ExplicitWithFlagsR10_Flags[q7] = 0 ->
         and([CoverTest_ExplicitWithFlagsR10_Values_Function1D[q7, q21] = 1 | q21 : int(1..k)])
             | q7 : int(1..b)]),
    and([CoverTest_ExplicitWithFlagsR10_Flags[q8 + 1] > 0 -> CoverTest_ExplicitWithFlagsR10_Flags[q8] > 0
             | q8 : int(1..b - 1)]),
    b = sum([CoverTest_ExplicitWithFlagsR10_Flags[q10] | q10 : int(1..b)])

$ Conjure's
$ {"finds": [{"Name": "CoverTest"}],
$  "givens": [{"Name": "k"}, {"Name": "b"}, {"Name": "t"}, {"Name": "g"}],
$  "enumGivens": [],
$  "enumLettings": [],
$  "lettings":
$      [[{"Name": "alphabet"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagUnnamed": "alphabet"},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                          {"Reference":
$                               [{"Name": "g"},
$                                {"DeclNoRepr":
$                                     ["Given", {"Name": "g"},
$                                      {"DomainInt":
$                                           [{"TagInt": []},
$                                            [{"RangeLowerBounded":
$                                                  {"Constant": {"ConstantInt": [{"TagInt": []}, 2]}}}]]},
$                                      {"NoRegion": []}]}]}]}]]}}],
$       [{"Name": "switches"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagUnnamed": "switches"},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                          {"Reference":
$                               [{"Name": "k"},
$                                {"DeclNoRepr":
$                                     ["Given", {"Name": "k"},
$                                      {"DomainInt":
$                                           [{"TagInt": []},
$                                            [{"RangeLowerBounded":
$                                                  {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]},
$                                      {"NoRegion": []}]}]}]}]]}}]],
$  "unnameds":
$      [[{"Name": "alphabet"}, {"Reference": [{"Name": "g"}, null]}],
$       [{"Name": "switches"}, {"Reference": [{"Name": "k"}, null]}]],
$  "strategyQ": {"PickFirst": []},
$  "strategyA": {"PickAll": []},
$  "trailCompact":
$      [[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]],
$  "trailVerbose": [],
$  "trailRewrites": [],
$  "nameGenState": [["q", 22]],
$  "nbExtraGivens": 0,
$  "representations":
$      [[{"Name": "k"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "t"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "b"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "g"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 2]}}}]]}],
$       [{"Name": "CoverTest"},
$        {"DomainMSet":
$             [{"MSet_ExplicitWithFlags": []},
$              [{"SizeAttr_Size":
$                    {"Reference":
$                         [{"Name": "b"},
$                          {"DeclHasRepr":
$                               ["Given", {"Name": "b"},
$                                {"DomainInt":
$                                     [{"TagInt": []},
$                                      [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}},
$               {"OccurAttr_None": []}],
$              {"DomainFunction":
$                   [{"Function_1D": []}, [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$                    {"DomainInt":
$                         [{"TagUnnamed": "switches"},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                 {"Reference":
$                                      [{"Name": "k"},
$                                       {"DeclHasRepr":
$                                            ["Given", {"Name": "k"},
$                                             {"DomainInt":
$                                                  [{"TagInt": []},
$                                                   [{"RangeLowerBounded":
$                                                         {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]},
$                    {"DomainInt":
$                         [{"TagUnnamed": "alphabet"},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                 {"Reference":
$                                      [{"Name": "g"},
$                                       {"DeclHasRepr":
$                                            ["Given", {"Name": "g"},
$                                             {"DomainInt":
$                                                  [{"TagInt": []},
$                                                   [{"RangeLowerBounded":
$                                                         {"Constant":
$                                                              {"ConstantInt": [{"TagInt": []}, 2]}}}]]}]}]}]}]]}]}]}]],
$  "representationsTree":
$      [[{"Name": "CoverTest"},
$        [{"rootLabel": {"MSet_ExplicitWithFlags": []},
$          "subForest":
$              [{"rootLabel": {"Function_1D": []},
$                "subForest":
$                    [{"rootLabel": null,
$                      "subForest": []},
$                     {"rootLabel": null,
$                      "subForest": []}]}]}]],
$       [{"Name": "b"},
$        [{"rootLabel": null,
$          "subForest": []}]],
$       [{"Name": "g"},
$        [{"rootLabel": null,
$          "subForest": []}]],
$       [{"Name": "k"},
$        [{"rootLabel": null,
$          "subForest": []}]],
$       [{"Name": "t"},
$        [{"rootLabel": null,
$          "subForest": []}]]],
$  "originalDomains":
$      [[{"Name": "k"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "b"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "t"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "g"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 2]}}}]]}],
$       [{"Name": "CoverTest"},
$        {"DomainMSet":
$             [[], [{"SizeAttr_Size": {"Reference": [{"Name": "b"}, null]}}, {"OccurAttr_None": []}],
$              {"DomainFunction":
$                   [[], [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$                    {"DomainReference": [{"Name": "switches"}, null]},
$                    {"DomainReference": [{"Name": "alphabet"}, null]}]}]}]],
$  "questionAnswered": []}
