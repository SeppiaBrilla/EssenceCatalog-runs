language ESSENCE' 1.0

given items_EnumSize: int
given fin1: int
given fin2: int
given fin3: int
given weights_Function1D: matrix indexed by [int(1..items_EnumSize)] of int(fin2..fin3)
given binSize: int
find packing_PartitionOccurrence_NumParts: int(1..items_EnumSize)
find packing_PartitionOccurrence_WhichPart: matrix indexed by [int(1..items_EnumSize)] of int(1..items_EnumSize)
find packing_PartitionOccurrence_PartSizes: matrix indexed by [int(1..items_EnumSize)] of int(0..items_EnumSize)
find packing_PartitionOccurrence_FirstIndex: matrix indexed by [int(1..items_EnumSize)] of int(1..items_EnumSize)
branching on
    [packing_PartitionOccurrence_NumParts, packing_PartitionOccurrence_WhichPart, packing_PartitionOccurrence_PartSizes,
     packing_PartitionOccurrence_FirstIndex]
minimising sum([toInt(q15 <= packing_PartitionOccurrence_NumParts) | q15 : int(1..items_EnumSize)])
such that
    and([q11 <= packing_PartitionOccurrence_NumParts ->
         binSize >=
         sum([toInt(packing_PartitionOccurrence_WhichPart[q13] = q11) * catchUndef(weights_Function1D[q13], 0)
                  | q13 : int(1..items_EnumSize)])
             | q11 : int(1..items_EnumSize)]),
    and([q1 <= packing_PartitionOccurrence_NumParts -> packing_PartitionOccurrence_PartSizes[q1] <= items_EnumSize
             | q1 : int(1..items_EnumSize)]),
    and([q1 > packing_PartitionOccurrence_NumParts -> packing_PartitionOccurrence_PartSizes[q1] = 0
             | q1 : int(1..items_EnumSize)]),
    packing_PartitionOccurrence_NumParts <= items_EnumSize,
    and([q2 <= packing_PartitionOccurrence_NumParts ->
         or([packing_PartitionOccurrence_WhichPart[q3] = q2 | q3 : int(1..items_EnumSize)])
             | q2 : int(3..items_EnumSize)]),
    packing_PartitionOccurrence_NumParts =
    max([packing_PartitionOccurrence_WhichPart[q4] | q4 : int(1..items_EnumSize)]),
    and([packing_PartitionOccurrence_PartSizes[q5] =
         sum([toInt(packing_PartitionOccurrence_WhichPart[q6] = q5) | q6 : int(1..items_EnumSize)])
             | q5 : int(1..items_EnumSize)]),
    and([q7 <= packing_PartitionOccurrence_NumParts ->
         and([packing_PartitionOccurrence_WhichPart[q8] = q7 -> packing_PartitionOccurrence_FirstIndex[q7] <= q8
                  | q8 : int(1..items_EnumSize)])
             | q7 : int(1..items_EnumSize)]),
    and([q7 <= packing_PartitionOccurrence_NumParts ->
         or([packing_PartitionOccurrence_WhichPart[q8] = q7 /\ packing_PartitionOccurrence_FirstIndex[q7] = q8
                 | q8 : int(1..items_EnumSize)])
             | q7 : int(1..items_EnumSize)]),
    and([q7 > packing_PartitionOccurrence_NumParts -> packing_PartitionOccurrence_FirstIndex[q7] = 1
             | q7 : int(1..items_EnumSize)]),
    and([q9 <= packing_PartitionOccurrence_NumParts /\ q10 <= packing_PartitionOccurrence_NumParts ->
         (q9 < q10 <-> packing_PartitionOccurrence_FirstIndex[q9] < packing_PartitionOccurrence_FirstIndex[q10])
             | q9 : int(1..items_EnumSize), q10 : int(1..items_EnumSize)])

$ Conjure's
$ {"finds": [{"Name": "packing"}], "givens": [{"Name": "weights"}, {"Name": "binSize"}],
$  "enumGivens": [{"Name": "items"}], "enumLettings": [],
$  "lettings":
$      [[{"Name": "items"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagEnum": "items"},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagEnum": "items"}, 1]}},
$                          {"Reference":
$                               [{"Name": "items_EnumSize"},
$                                {"DeclNoRepr":
$                                     ["Given", {"Name": "items_EnumSize"}, {"DomainInt": [{"TagEnum": "items"}, []]},
$                                      {"NoRegion": []}]}]}]}]]}}]],
$  "unnameds": [], "strategyQ": {"PickFirst": []}, "strategyA": {"PickAll": []},
$  "trailCompact":
$      [[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 4, 4], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]],
$  "nameGenState": [["fin", 4], ["q", 17]], "nbExtraGivens": 3,
$  "representations":
$      [[{"MachineName": ["fin", 1, []]}, {"DomainInt": [{"TagInt": []}, []]}],
$       [{"Name": "items_EnumSize"}, {"DomainInt": [{"TagEnum": "items"}, []]}],
$       [{"MachineName": ["fin", 2, []]}, {"DomainInt": [{"TagInt": []}, []]}],
$       [{"MachineName": ["fin", 3, []]}, {"DomainInt": [{"TagInt": []}, []]}],
$       [{"Name": "packing"},
$        {"DomainPartition":
$             [{"Partition_Occurrence": []},
$              {"isRegular": false,
$               "partsNum":
$                   {"SizeAttr_MaxSize":
$                        {"Reference":
$                             [{"Name": "items_EnumSize"},
$                              {"DeclHasRepr":
$                                   ["Given", {"Name": "items_EnumSize"}, {"DomainInt": [{"TagEnum": "items"}, []]}]}]}},
$               "partsSize":
$                   {"SizeAttr_MaxSize":
$                        {"Reference":
$                             [{"Name": "items_EnumSize"},
$                              {"DeclHasRepr":
$                                   ["Given", {"Name": "items_EnumSize"}, {"DomainInt": [{"TagEnum": "items"}, []]}]}]}}},
$              {"DomainInt":
$                   [{"TagEnum": "items"},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagEnum": "items"}, 1]}},
$                           {"Reference":
$                                [{"Name": "items_EnumSize"},
$                                 {"DeclHasRepr":
$                                      ["Given", {"Name": "items_EnumSize"},
$                                       {"DomainInt": [{"TagEnum": "items"}, []]}]}]}]}]]}]}],
$       [{"Name": "binSize"}, {"DomainInt": [{"TagInt": []}, []]}],
$       [{"Name": "weights"},
$        {"DomainFunction":
$             [{"Function_1D": []},
$              [{"SizeAttr_Size":
$                    {"Reference":
$                         [{"MachineName": ["fin", 1, []]},
$                          {"DeclHasRepr":
$                               ["Given", {"MachineName": ["fin", 1, []]}, {"DomainInt": [{"TagInt": []}, []]}]}]}},
$               "PartialityAttr_Total", "JectivityAttr_None"],
$              {"DomainInt":
$                   [{"TagEnum": "items"},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagEnum": "items"}, 1]}},
$                           {"Reference":
$                                [{"Name": "items_EnumSize"},
$                                 {"DeclHasRepr":
$                                      ["Given", {"Name": "items_EnumSize"},
$                                       {"DomainInt": [{"TagEnum": "items"}, []]}]}]}]}]]},
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Reference":
$                                [{"MachineName": ["fin", 2, []]},
$                                 {"DeclHasRepr":
$                                      ["Given", {"MachineName": ["fin", 2, []]}, {"DomainInt": [{"TagInt": []}, []]}]}]},
$                           {"Reference":
$                                [{"MachineName": ["fin", 3, []]},
$                                 {"DeclHasRepr":
$                                      ["Given", {"MachineName": ["fin", 3, []]},
$                                       {"DomainInt": [{"TagInt": []}, []]}]}]}]}]]}]}]],
$  "representationsTree":
$      [[{"Name": "binSize"}, [{"rootLabel": null, "subForest": []}]],
$       [{"MachineName": ["fin", 1, []]}, [{"rootLabel": null, "subForest": []}]],
$       [{"MachineName": ["fin", 2, []]}, [{"rootLabel": null, "subForest": []}]],
$       [{"MachineName": ["fin", 3, []]}, [{"rootLabel": null, "subForest": []}]],
$       [{"Name": "items_EnumSize"}, [{"rootLabel": null, "subForest": []}]],
$       [{"Name": "packing"},
$        [{"rootLabel": {"Partition_Occurrence": []}, "subForest": [{"rootLabel": null, "subForest": []}]}]],
$       [{"Name": "weights"},
$        [{"rootLabel": {"Function_1D": []},
$          "subForest": [{"rootLabel": null, "subForest": []}, {"rootLabel": null, "subForest": []}]}]]],
$  "originalDomains":
$      [[{"Name": "weights"},
$        {"DomainFunction":
$             [[], [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$              {"DomainEnum": [{"Name": "items"}, null, null]}, {"DomainInt": [{"TagInt": []}, []]}]}],
$       [{"Name": "binSize"}, {"DomainInt": [{"TagInt": []}, []]}],
$       [{"Name": "packing"},
$        {"DomainPartition":
$             [[],
$              {"isRegular": false,
$               "partsNum":
$                   {"SizeAttr_MaxSize":
$                        {"Reference":
$                             [{"Name": "items_EnumSize"},
$                              {"DeclHasRepr":
$                                   ["Given", {"Name": "items_EnumSize"}, {"DomainInt": [{"TagInt": []}, []]}]}]}},
$               "partsSize":
$                   {"SizeAttr_MaxSize":
$                        {"Reference":
$                             [{"Name": "items_EnumSize"},
$                              {"DeclHasRepr":
$                                   ["Given", {"Name": "items_EnumSize"}, {"DomainInt": [{"TagInt": []}, []]}]}]}}},
$              {"DomainEnum": [{"Name": "items"}, null, null]}]}]],
$  "trailGeneralised":
$      [[-1479917237840680234, 2875862549867741160], [7934557632833528371, -8438055240862190397],
$       [-8410469502249840799, -3905480646990304467], [8338074065665586015, -4556887095053778318],
$       [-2372593833791795883, 4728779641239605092], [-1393276739157286946, 6764342124102308554],
$       [1072884291449426492, -1837544619075061467], [7216427109255087194, 5434588241155694308],
$       [-8325401357824743328, -7186664344983939487], [331903449391788977, 8456771783978558476],
$       [-1573145440769135057, 7758163391630697199], [-1478516373081207664, 2771668201937543518],
$       [8650509741399506092, 4103848136364996667], [-5955404943366097276, -2545328384839436358],
$       [4925930404135874746, 7203796049264427492], [-1964619343501682966, -3174129651647017206],
$       [3730933743548056604, 1964705926472698446], [5329521807923041672, -2219010388201055322],
$       [-4456875946249941022, 1606776454205706460], [-6331628406025039774, 7640295111856971380],
$       [3618084367837630884, 8150667547478903825], [3190864779009096230, -2206370213147494576],
$       [-1794811686828842773, 660237869870656707], [-8563631780914108788, -2998697322022831784],
$       [-3216785072616034014, -3117504614726517792], [-6106326214239892482, 5834924621106782339],
$       [3724567455703989596, 632256885722657676], [888852089860234709, -5250910895255184496],
$       [2463844020309165833, -8438055240862190397], [-1760933250537403944, 1496595976874400561],
$       [7316297631378821396, 7069413496348158346], [-7150652855292327496, 6823251860015111511],
$       [3238693183765359521, 7535885721777863228], [5136304500382594498, 6879722937135573684],
$       [-2443250719592317485, -2500400956441775974], [3033422097633957252, -8878279184444494005],
$       [-597449876615766618, -4457626374825251924], [-8530219031051722050, 7258064271722042771],
$       [6672564029077454311, -5632194639096442272], [3706037204365761590, -2633244766161995876],
$       [-8868488702714220348, 4981424689261434385], [5904271960268071060, -2677240832022109213],
$       [-373263288046125754, -3501354477265993832], [-736645527487166108, 41569212269477097],
$       [-8940990002979762542, 4110457826774952372], [-3722262881154758639, 6794018145404485952],
$       [4677448713016688903, 1530632864381139406], [1391725996931715816, -2717752761680935708]],
$  "trailVerbose": [], "trailRewrites": []}
