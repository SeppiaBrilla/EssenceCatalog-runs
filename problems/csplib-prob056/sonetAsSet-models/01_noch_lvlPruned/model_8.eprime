language ESSENCE' 1.0

given nnodes: int(1..)
given nrings: int(1..)
given capacity: int(1..)
given fin1: int
given demand_ExplicitR3_Explicit: matrix indexed by [int(1..fin1), int(1..2)] of int(1..nnodes)
find network_ExplicitVarSizeWithFlagsR4_Flags: matrix indexed by [int(1..nrings)] of bool
find network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags:
        matrix indexed by [int(1..nrings), int(1..capacity)] of bool
find network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Values:
        matrix indexed by [int(1..nrings), int(1..capacity)] of int(1..nnodes)
letting let1 be nrings * capacity
find optVar: int(0..let1)
branching on
    [network_ExplicitVarSizeWithFlagsR4_Flags, network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags,
     network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Values, optVar]
minimising optVar
such that
    optVar =
    sum([toInt(network_ExplicitVarSizeWithFlagsR4_Flags[q15]) *
         catchUndef(sum([toInt(network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q15, q17])
                             | q17 : int(1..capacity)]),
                    0)
             | q15 : int(1..nrings)]),
    and([or([network_ExplicitVarSizeWithFlagsR4_Flags[q19] /\
             and([or([network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q19, q23] /\
                      network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Values[q19, q23] =
                      demand_ExplicitR3_Explicit[q18, q21]
                          | q23 : int(1..capacity)])
                      | q21 : int(1..2)])
                 | q19 : int(1..nrings)])
             | q18 : int(1..fin1)]),
    and([network_ExplicitVarSizeWithFlagsR4_Flags[q1 + 1] ->
         flatten([flatten([[-toInt(network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q1, q11]);
                                int(1)],
                           [network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Values[q1, q11]; int(1)];
                               int(1..2)])
                      | q11 : int(1..capacity)])
         <lex
         flatten([flatten([[-toInt(network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags
                                       [q1 + 1, q12]);
                                int(1)],
                           [network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Values[q1 + 1, q12];
                                int(1)];
                               int(1..2)])
                      | q12 : int(1..capacity)])
             | q1 : int(1..nrings - 1)]),
    and([network_ExplicitVarSizeWithFlagsR4_Flags[q2] = false ->
         and([network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q2, q13] = false
                  | q13 : int(1..capacity)])
         /\
         and([network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Values[q2, q14] = 1
                  | q14 : int(1..capacity)])
             | q2 : int(1..nrings)]),
    and([network_ExplicitVarSizeWithFlagsR4_Flags[q3 + 1] -> network_ExplicitVarSizeWithFlagsR4_Flags[q3]
             | q3 : int(1..nrings - 1)]),
    sum([toInt(network_ExplicitVarSizeWithFlagsR4_Flags[q4]) | q4 : int(1..nrings)]) <= nrings,
    and([network_ExplicitVarSizeWithFlagsR4_Flags[q5] ->
         and([network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q5, q6 + 1] ->
              network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Values[q5, q6] <
              network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Values[q5, q6 + 1]
                  | q6 : int(1..capacity - 1)])
             | q5 : int(1..nrings)]),
    and([network_ExplicitVarSizeWithFlagsR4_Flags[q5] ->
         and([network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q5, q7] = false ->
              network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Values[q5, q7] = 1
                  | q7 : int(1..capacity)])
             | q5 : int(1..nrings)]),
    and([network_ExplicitVarSizeWithFlagsR4_Flags[q5] ->
         and([network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q5, q8 + 1] ->
              network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q5, q8]
                  | q8 : int(1..capacity - 1)])
             | q5 : int(1..nrings)]),
    and([network_ExplicitVarSizeWithFlagsR4_Flags[q5] ->
         2 <=
         sum([toInt(network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q5, q9])
                  | q9 : int(1..capacity)])
             | q5 : int(1..nrings)]),
    and([network_ExplicitVarSizeWithFlagsR4_Flags[q5] ->
         sum([toInt(network_ExplicitVarSizeWithFlagsR4_Values_ExplicitVarSizeWithFlags_Flags[q5, q9])
                  | q9 : int(1..capacity)])
         <= capacity
             | q5 : int(1..nrings)])

$ Conjure's
$ {"finds": [{"Name": "network"}, {"Name": "optVar"}],
$  "givens": [{"Name": "nnodes"}, {"Name": "nrings"}, {"Name": "capacity"}, {"Name": "demand"}], "enumGivens": [],
$  "enumLettings": [],
$  "lettings":
$      [[{"Name": "Nodes"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagInt": []},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                          {"Reference":
$                               [{"Name": "nnodes"},
$                                {"DeclNoRepr":
$                                     ["Given", {"Name": "nnodes"},
$                                      {"DomainInt":
$                                           [{"TagInt": []},
$                                            [{"RangeLowerBounded":
$                                                  {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]},
$                                      {"NoRegion": []}]}]}]}]]}}],
$       [{"MachineName": ["let", 1, []]},
$        {"Op":
$             {"MkOpProduct":
$                  {"AbstractLiteral":
$                       {"AbsLitMatrix":
$                            [{"DomainInt":
$                                  [{"TagInt": []},
$                                   [{"RangeBounded":
$                                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                          {"Constant": {"ConstantInt": [{"TagInt": []}, 2]}}]}]]},
$                             [{"Reference":
$                                   [{"Name": "nrings"},
$                                    {"DeclNoRepr":
$                                         ["Given", {"Name": "nrings"},
$                                          {"DomainInt":
$                                               [{"TagInt": []},
$                                                [{"RangeLowerBounded":
$                                                      {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]},
$                                          {"NoRegion": []}]}]},
$                              {"Reference":
$                                   [{"Name": "capacity"},
$                                    {"DeclNoRepr":
$                                         ["Given", {"Name": "capacity"},
$                                          {"DomainInt":
$                                               [{"TagInt": []},
$                                                [{"RangeLowerBounded":
$                                                      {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]},
$                                          {"NoRegion": []}]}]}]]}}}}]],
$  "unnameds": [], "strategyQ": {"PickFirst": []}, "strategyA": {"PickAll": []},
$  "trailCompact":
$      [[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 8, 8], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]],
$  "trailVerbose": [], "trailRewrites": [], "nameGenState": [["fin", 2], ["let", 2], ["q", 24]], "nbExtraGivens": 1,
$  "representations":
$      [[{"MachineName": ["fin", 1, []]}, {"DomainInt": [{"TagInt": []}, []]}],
$       [{"Name": "nnodes"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "nrings"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "capacity"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "optVar"},
$        {"DomainInt":
$             [{"TagInt": []},
$              [{"RangeBounded":
$                    [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                     {"Reference":
$                          [{"MachineName": ["let", 1, []]},
$                           {"Alias":
$                                {"Op":
$                                     {"MkOpProduct":
$                                          {"AbstractLiteral":
$                                               {"AbsLitMatrix":
$                                                    [{"DomainInt":
$                                                          [{"TagInt": []},
$                                                           [{"RangeBounded":
$                                                                 [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                                                  {"Constant":
$                                                                       {"ConstantInt": [{"TagInt": []}, 2]}}]}]]},
$                                                     [{"Reference":
$                                                           [{"Name": "nrings"},
$                                                            {"DeclHasRepr":
$                                                                 ["Given", {"Name": "nrings"},
$                                                                  {"DomainInt":
$                                                                       [{"TagInt": []},
$                                                                        [{"RangeLowerBounded":
$                                                                              {"Constant":
$                                                                                   {"ConstantInt":
$                                                                                        [{"TagInt": []}, 1]}}}]]}]}]},
$                                                      {"Reference":
$                                                           [{"Name": "capacity"},
$                                                            {"DeclHasRepr":
$                                                                 ["Given", {"Name": "capacity"},
$                                                                  {"DomainInt":
$                                                                       [{"TagInt": []},
$                                                                        [{"RangeLowerBounded":
$                                                                              {"Constant":
$                                                                                   {"ConstantInt":
$                                                                                        [{"TagInt": []},
$                                                                                         1]}}}]]}]}]}]]}}}}}]}]}]]}],
$       [{"Name": "network"},
$        {"DomainSet":
$             [{"Set_ExplicitVarSizeWithFlags": []},
$              {"SizeAttr_MaxSize":
$                   {"Reference":
$                        [{"Name": "nrings"},
$                         {"DeclHasRepr":
$                              ["Given", {"Name": "nrings"},
$                               {"DomainInt":
$                                    [{"TagInt": []},
$                                     [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}},
$              {"DomainSet":
$                   [{"Set_ExplicitVarSizeWithFlags": []},
$                    {"SizeAttr_MinMaxSize":
$                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 2]}},
$                          {"Reference":
$                               [{"Name": "capacity"},
$                                {"DeclHasRepr":
$                                     ["Given", {"Name": "capacity"},
$                                      {"DomainInt":
$                                           [{"TagInt": []},
$                                            [{"RangeLowerBounded":
$                                                  {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]},
$                    {"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                 {"Reference":
$                                      [{"Name": "nnodes"},
$                                       {"DeclHasRepr":
$                                            ["Given", {"Name": "nnodes"},
$                                             {"DomainInt":
$                                                  [{"TagInt": []},
$                                                   [{"RangeLowerBounded":
$                                                         {"Constant":
$                                                              {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]}]}]}],
$       [{"Name": "demand"},
$        {"DomainSet":
$             [{"Set_Explicit": []},
$              {"SizeAttr_Size":
$                   {"Reference":
$                        [{"MachineName": ["fin", 1, []]},
$                         {"DeclHasRepr":
$                              ["Given", {"MachineName": ["fin", 1, []]}, {"DomainInt": [{"TagInt": []}, []]}]}]}},
$              {"DomainSet":
$                   [{"Set_Explicit": []}, {"SizeAttr_Size": {"Constant": {"ConstantInt": [{"TagInt": []}, 2]}}},
$                    {"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                 {"Reference":
$                                      [{"Name": "nnodes"},
$                                       {"DeclHasRepr":
$                                            ["Given", {"Name": "nnodes"},
$                                             {"DomainInt":
$                                                  [{"TagInt": []},
$                                                   [{"RangeLowerBounded":
$                                                         {"Constant":
$                                                              {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]}]}]}]],
$  "representationsTree":
$      [[{"Name": "capacity"}, [{"rootLabel": null, "subForest": []}]],
$       [{"Name": "demand"},
$        [{"rootLabel": {"Set_Explicit": []},
$          "subForest": [{"rootLabel": {"Set_Explicit": []}, "subForest": [{"rootLabel": null, "subForest": []}]}]}]],
$       [{"MachineName": ["fin", 1, []]}, [{"rootLabel": null, "subForest": []}]],
$       [{"Name": "network"},
$        [{"rootLabel": {"Set_ExplicitVarSizeWithFlags": []},
$          "subForest":
$              [{"rootLabel": {"Set_ExplicitVarSizeWithFlags": []},
$                "subForest": [{"rootLabel": null, "subForest": []}]}]}]],
$       [{"Name": "nnodes"}, [{"rootLabel": null, "subForest": []}]],
$       [{"Name": "nrings"}, [{"rootLabel": null, "subForest": []}]],
$       [{"Name": "optVar"}, [{"rootLabel": null, "subForest": []}]]],
$  "originalDomains":
$      [[{"Name": "nnodes"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "nrings"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "capacity"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "demand"},
$        {"DomainSet":
$             [[], {"SizeAttr_None": []},
$              {"DomainSet":
$                   [[], {"SizeAttr_Size": {"Constant": {"ConstantInt": [{"TagInt": []}, 2]}}},
$                    {"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                 {"Reference": [{"Name": "nnodes"}, null]}]}]]}]}]}],
$       [{"Name": "network"},
$        {"DomainSet":
$             [[], {"SizeAttr_MaxSize": {"Reference": [{"Name": "nrings"}, null]}},
$              {"DomainSet":
$                   [[],
$                    {"SizeAttr_MinMaxSize":
$                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 2]}},
$                          {"Reference": [{"Name": "capacity"}, null]}]},
$                    {"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                 {"Reference": [{"Name": "nnodes"}, null]}]}]]}]}]}],
$       [{"Name": "optVar"},
$        {"DomainInt":
$             [{"TagInt": []},
$              [{"RangeBounded":
$                    [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                     {"Reference": [{"MachineName": ["let", 1, []]}, null]}]}]]}]],
$  "trailGeneralised":
$      [[6450089501420586252, 8050219415708640565], [8966751844452072660, 3389529758856648217],
$       [5140087427203097794, -4410510040363612866], [-6973083148794608807, -3144970728883923788],
$       [-8647537635789606959, -181320064036843786], [685753857829985151, -3817870162557537844],
$       [-6045756502817761957, 2036045372013067261], [4125788346421480514, -4053870832157677091],
$       [411931376502950736, 4428659857651850360], [7255455776925905418, 6563764297252427421],
$       [-2540616362759459620, 4842395692810299342], [7280417699951703446, -2113877878112928250],
$       [-4643536421227158145, -4887771629277838067], [3007822935161730929, 7480747694224496875],
$       [6696706627392854992, 5506149292197955276], [-6034826418531260395, 1141158920265625827],
$       [-4118542067054786057, -8112450597396923468], [4690656239743277070, -3901583317679092456],
$       [4098361137618935450, -6041355964288305823], [-4413531902738095847, -2749335899665773682],
$       [6010038139590095911, -5307679817959106200], [8419021050240059144, 7745075381593124576],
$       [2498473676840427815, -100728453735772766], [-5386698651591810838, -3683590168775264669],
$       [1772524842648170531, 713136133200016754], [-1475792504987592038, -3683590168775264669],
$       [-152019657430469147, -3142358937472967094], [129316003974347384, 6297224146553284002],
$       [-5773153318925407293, 9102678066140711441], [1256984813250559841, -1651903254764707171],
$       [7978701017941118619, -4971581521854033414], [6730254802791349205, -8855454920177953489],
$       [-6716852564455250610, -854553473205746843], [4471976917423609529, -4386444734052088094],
$       [-3577091514725818969, 8707986253136874405], [4627992047071744735, 3479156968139366774],
$       [-9192372213591063749, 2688126976522165841], [-7655405481809676795, 6000218931218002022],
$       [2900275691323250799, 7771909844103390397], [3582366298580284561, -8786907887418985733],
$       [-2156653069942506126, 514207783018613827], [7700376966896800969, -2680424393322057479],
$       [-225600971543091724, 2290318547517363111], [417570535753221139, -6570593182436608860],
$       [4447693950220375496, -8032426920293761965], [8173131559860776495, 631542723690288118],
$       [6486076997999860381, -5969348615035280939], [5498285853640442318, 4471729077683622168],
$       [3179371443223421653, 4021111245014027566], [7704744415386538701, -7224570746593272711],
$       [-8736206278280957309, 919584934494999555], [-1615646248971698242, 6815619487570077657],
$       [-175311732066775887, -2292493454141341413], [76536598755181123, 8198226721277653699],
$       [-8130930946369124807, 4420464864779464649], [-7800507695357859946, 2441747934265906269],
$       [3374757920451403524, -2096885823222603263], [8993613185948270769, 6246029443405160411]]}
