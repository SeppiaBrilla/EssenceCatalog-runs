language ESSENCE' 1.0

given n: int(1..)
given k: int(1..)
find boxes_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy: matrix indexed by [int(1..k), int(1..n)] of int(1..n + 1)
branching on [boxes_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy]
such that
    and([or([nums_Explicit[q18] != nums_Explicit[q19] /\ nums_Explicit[q18] + nums_Explicit[q19] = nums_Explicit[q20]
                 | q18 : int(1..3), q19 : int(1..3), q20 : int(1..3)])
         ->
         and([!and([or([boxes_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q26, q30] != n + 1 /\
                        boxes_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q26, q30] = nums_Explicit[q28]
                            | q30 : int(1..n)])
                        | q28 : int(1..3)])
                  | q26 : int(1..k)])
         /\ and([or([nums_Explicit[q24] = q23 | q23 : int(1..n)]) | q24 : int(1..3)])
             | nums_Explicit : matrix indexed by [int(1..3)] of int(1..n),
               and([nums_Explicit[q1] < nums_Explicit[q1 + 1] | q1 : int(1..2)])]),
    alldifferent_except([toInt(boxes_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q31, q32] != n + 1) *
                         catchUndef(boxes_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q31, q32], 0)
                             | q31 : int(1..k), q32 : int(1..n)],
                        0),
    and([sum([toInt(boxes_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q33, q35] != n + 1) | q35 : int(1..n)]) >=
         1   | q33 : int(1..k)]),
    and([[boxes_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q6, q13] | q13 : int(1..n)] <lex
         [boxes_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q6 + 1, q14] | q14 : int(1..n)]
             | q6 : int(1..k - 1)]),
    and([and([boxes_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q7, q8] <
              boxes_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q7, q8 + 1]
              \/ boxes_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q7, q8] = n + 1
                  | q8 : int(1..n - 1)])
             | q7 : int(1..k)]),
    and([and([boxes_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q7, q9] = n + 1 ->
              boxes_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q7, q9 + 1] = n + 1
                  | q9 : int(1..n - 1)])
             | q7 : int(1..k)]),
    and([sum([toInt(boxes_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q7, q10] != n + 1) | q10 : int(1..n)]) <= n
             | q7 : int(1..k)]),
    n =
    sum([sum([toInt(boxes_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q15, q17] != n + 1) | q17 : int(1..n)])
             | q15 : int(1..k)])

$ Conjure's
$ {"finds": [{"Name": "boxes"}], "givens": [{"Name": "n"}, {"Name": "k"}], "enumGivens": [], "enumLettings": [],
$  "lettings":
$      [[{"Name": "ball"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagInt": []},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                          {"Reference":
$                               [{"Name": "n"},
$                                {"DeclNoRepr":
$                                     ["Given", {"Name": "n"},
$                                      {"DomainInt":
$                                           [{"TagInt": []},
$                                            [{"RangeLowerBounded":
$                                                  {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]},
$                                      {"NoRegion": []}]}]}]}]]}}]],
$  "unnameds": [], "strategyQ": {"PickFirst": []}, "strategyA": {"PickAll": []},
$  "trailCompact":
$      [[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 2, 4], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]],
$  "trailVerbose": [], "trailRewrites": [], "nameGenState": [["q", 36]], "nbExtraGivens": 0,
$  "representations":
$      [[{"Name": "k"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "n"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "boxes"},
$        {"DomainPartition":
$             [{"Partition_AsSet": [{"Set_Explicit": []}, {"Set_ExplicitVarSizeWithDummy": []}]},
$              {"isRegular": false,
$               "partsNum":
$                   {"SizeAttr_Size":
$                        {"Reference":
$                             [{"Name": "k"},
$                              {"DeclHasRepr":
$                                   ["Given", {"Name": "k"},
$                                    {"DomainInt":
$                                         [{"TagInt": []},
$                                          [{"RangeLowerBounded":
$                                                {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}},
$               "partsSize":
$                   {"SizeAttr_MaxSize":
$                        {"Reference":
$                             [{"Name": "n"},
$                              {"DeclHasRepr":
$                                   ["Given", {"Name": "n"},
$                                    {"DomainInt":
$                                         [{"TagInt": []},
$                                          [{"RangeLowerBounded":
$                                                {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}}},
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference":
$                                [{"Name": "n"},
$                                 {"DeclHasRepr":
$                                      ["Given", {"Name": "n"},
$                                       {"DomainInt":
$                                            [{"TagInt": []},
$                                             [{"RangeLowerBounded":
$                                                   {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]}]}]],
$  "representationsTree":
$      [[{"Name": "boxes"},
$        [{"rootLabel": {"Partition_AsSet": [{"Set_Explicit": []}, {"Set_ExplicitVarSizeWithDummy": []}]},
$          "subForest": [{"rootLabel": null, "subForest": []}]}]],
$       [{"Name": "k"}, [{"rootLabel": null, "subForest": []}]], [{"Name": "n"}, [{"rootLabel": null, "subForest": []}]]],
$  "originalDomains":
$      [[{"Name": "n"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "k"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "boxes"},
$        {"DomainPartition":
$             [[],
$              {"isRegular": false, "partsNum": {"SizeAttr_Size": {"Reference": [{"Name": "k"}, null]}},
$               "partsSize":
$                   {"SizeAttr_MaxSize":
$                        {"Reference":
$                             [{"Name": "n"},
$                              {"DeclNoRepr":
$                                   ["Given", {"Name": "n"},
$                                    {"DomainInt":
$                                         [{"TagInt": []},
$                                          [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]},
$                                    {"NoRegion": []}]}]}}},
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference": [{"Name": "n"}, null]}]}]]}]}]],
$  "trailGeneralised":
$      [[8521405715267969294, -5916525239295674986], [-6010055419553886524, -5296734508237410931],
$       [5141596400714815315, 1228280531945633357], [-6686478402630797636, -2068184187287979503],
$       [-3174642192496202677, -1987237544301031085], [7345487083972488525, -8112450597396923468],
$       [-844018867438401638, -3180678939203672776], [1724872796410024234, -2571994279142846670],
$       [-3956551926463904624, 8575666556782319319], [-5142096592405498791, 9097813237498499517],
$       [4262562333064840001, 6616336917066580450], [-1166241679041111643, -6651247083116612559],
$       [7627500238812943401, 442652718872197985], [-5215552004552457249, -2571994279142846670],
$       [-3711882315928428503, 3111398544689656278], [7422951068903052643, 4411165510323278032],
$       [5322389813417142517, 462595064076819810], [-3674323387368635991, -2676150693551030142],
$       [3954168962285728884, -4748329139012310462], [-3550849107159167230, -2571994279142846670],
$       [-2402401311692279670, 3722366563779950574], [-971795779682053276, 5504070818900047007],
$       [-3670511242089354219, 4093603737211190298], [4918012466253518681, -4975231455055487805],
$       [-1187340871040404537, 8121199674903657252], [3012406967557009725, 3898170083890876112],
$       [9220993393000504105, -8027691931868502605], [-5688038695930818529, 6584678057694230396],
$       [-2942455778503325075, 1624743764273465116], [-255731368175397703, 179048589520279047],
$       [-2959279089658294774, 1324161741110877121], [1305319243917038371, -8647256307401682065],
$       [-5723158840081875194, 1534051553706923009], [-8646268920364923142, -7365113045963570579],
$       [7428941933342230107, 463933408000291665], [-7875113655528243088, -3083017444725018288],
$       [-1068659341670111154, 5990296040862599598], [-4959751563141648227, 8506340691902568274],
$       [-99446346913607013, -4128691261403902768], [9083922785540362306, -6643957431810500997],
$       [5965365808955824070, -8112450597396923468], [7243972064310105103, -7145413543137953812],
$       [3779459504139570281, -2571994279142846670], [-8022484559137504131, -559622831012277337],
$       [5221060834221646772, -106309841227357119], [4421117396347617698, -3368642655943187744],
$       [3165618860010378398, -4256052843949759129], [-2343455537339909294, -9040292497857533526],
$       [-2440861453271030025, -1841244296377558175], [-2642878316051056481, -6963254740322289787],
$       [3048464707664150347, -6243334694514952676], [699819404626250431, 3365099159093828848],
$       [2887638720046672256, -2127319617132219425], [-8164609712071337253, -6739780697662072214],
$       [-3250434955825096437, -2010438243975090557], [4187625763543771039, 8575298594094760061],
$       [-5745562214580420557, 5211190619151928213], [-2651211193263860150, -7018257217055519145],
$       [-8038600008717081036, 4091139690791857311], [61105424080444331, 6451463301502699560],
$       [-6023009731287103103, -7932923250560875338], [-8846560346680659625, 1261264715600158447],
$       [-3035079737718560626, 178027452492111442], [-8002774364647541809, -9100149765960389842],
$       [-305927369662984068, -7073775993225742707], [-5588859094841185183, 4935884523497843439],
$       [8624308888451280299, 5599322668969595309], [3717981750448514978, 8025498888737249597]]}
