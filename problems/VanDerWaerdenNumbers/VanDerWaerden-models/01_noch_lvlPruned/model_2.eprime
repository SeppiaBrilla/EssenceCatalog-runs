language ESSENCE' 1.0

given k: int(1..)
given l: int(1..)
given n: int(1..)
find p_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy: matrix indexed by [int(1..k), int(1..n)] of int(1..n + 1)
branching on [p_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy]
such that
    and([and([and([!and([or([p_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q17, q20] != n + 1 /\
                             p_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q17, q20] = start + i * width
                                 | q20 : int(1..n)])
                             | i : int(0..l - 1)])
                       | width : int(1..(n - start + 1) / (l - 1))])
                  | start : int(1..n - l + 1)])
             | q17 : int(1..k)]),
    alldifferent_except([toInt(p_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q24, q25] != n + 1) *
                         catchUndef(p_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q24, q25], 0)
                             | q24 : int(1..k), q25 : int(1..n)],
                        0),
    and([sum([toInt(p_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q26, q28] != n + 1) | q28 : int(1..n)]) >= 1
             | q26 : int(1..k)]),
    and([[p_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q4, q11] | q11 : int(1..n)] <lex
         [p_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q4 + 1, q12] | q12 : int(1..n)]
             | q4 : int(1..k - 1)]),
    and([and([p_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q5, q6] <
              p_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q5, q6 + 1]
              \/ p_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q5, q6] = n + 1
                  | q6 : int(1..n - 1)])
             | q5 : int(1..k)]),
    and([and([p_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q5, q7] = n + 1 ->
              p_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q5, q7 + 1] = n + 1
                  | q7 : int(1..n - 1)])
             | q5 : int(1..k)]),
    and([sum([toInt(p_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q5, q8] != n + 1) | q8 : int(1..n)]) <= n
             | q5 : int(1..k)]),
    n =
    sum([sum([toInt(p_PartitionAsSet_ExplicitR6_ExplicitVarSizeWithDummy[q13, q15] != n + 1) | q15 : int(1..n)])
             | q13 : int(1..k)])

$ Conjure's
$ {"finds": [{"Name": "p"}], "givens": [{"Name": "k"}, {"Name": "l"}, {"Name": "n"}], "enumGivens": [],
$  "enumLettings": [], "lettings": [], "unnameds": [], "strategyQ": {"PickFirst": []}, "strategyA": {"PickAll": []},
$  "trailCompact":
$      [[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 2, 4], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]],
$  "trailVerbose": [], "trailRewrites": [], "nameGenState": [["q", 30]], "nbExtraGivens": 0,
$  "representations":
$      [[{"Name": "k"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "n"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "l"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "p"},
$        {"DomainPartition":
$             [{"Partition_AsSet": [{"Set_Explicit": []}, {"Set_ExplicitVarSizeWithDummy": []}]},
$              {"isRegular": false,
$               "partsNum":
$                   {"SizeAttr_Size":
$                        {"Reference":
$                             [{"Name": "k"},
$                              {"DeclHasRepr":
$                                   ["Given", {"Name": "k"},
$                                    {"DomainInt":
$                                         [{"TagInt": []},
$                                          [{"RangeLowerBounded":
$                                                {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}},
$               "partsSize":
$                   {"SizeAttr_MaxSize":
$                        {"Reference":
$                             [{"Name": "n"},
$                              {"DeclHasRepr":
$                                   ["Given", {"Name": "n"},
$                                    {"DomainInt":
$                                         [{"TagInt": []},
$                                          [{"RangeLowerBounded":
$                                                {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}}},
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference":
$                                [{"Name": "n"},
$                                 {"DeclHasRepr":
$                                      ["Given", {"Name": "n"},
$                                       {"DomainInt":
$                                            [{"TagInt": []},
$                                             [{"RangeLowerBounded":
$                                                   {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]}]}]],
$  "representationsTree":
$      [[{"Name": "k"}, [{"rootLabel": null, "subForest": []}]], [{"Name": "l"}, [{"rootLabel": null, "subForest": []}]],
$       [{"Name": "n"}, [{"rootLabel": null, "subForest": []}]],
$       [{"Name": "p"},
$        [{"rootLabel": {"Partition_AsSet": [{"Set_Explicit": []}, {"Set_ExplicitVarSizeWithDummy": []}]},
$          "subForest": [{"rootLabel": null, "subForest": []}]}]]],
$  "originalDomains":
$      [[{"Name": "k"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "l"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "n"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "p"},
$        {"DomainPartition":
$             [[],
$              {"isRegular": false, "partsNum": {"SizeAttr_Size": {"Reference": [{"Name": "k"}, null]}},
$               "partsSize":
$                   {"SizeAttr_MaxSize":
$                        {"Reference":
$                             [{"Name": "n"},
$                              {"DeclNoRepr":
$                                   ["Given", {"Name": "n"},
$                                    {"DomainInt":
$                                         [{"TagInt": []},
$                                          [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]},
$                                    {"NoRegion": []}]}]}}},
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference": [{"Name": "n"}, null]}]}]]}]}]],
$  "trailGeneralised":
$      [[-2464292353537894770, -999013570834818750], [-4525911166720631850, -5296734508237410931],
$       [-5617953456824780791, -1466377872325028287], [5757379705463829626, 3486623610985443807],
$       [7098797094159814870, 1627113809310282395], [-3342220141924717412, -8112450597396923468],
$       [-2835891770137580237, 5489634950841949918], [7626879305413718581, -2571994279142846670],
$       [-5840655821890546445, 6848701922169497103], [-874555701357900622, 1273367119922395397],
$       [543791126340428313, 6096908414147864641], [6421562547413957067, -8465291230717805683],
$       [4161391617587056785, 3092009100718499174], [-5537712824208148735, -2571994279142846670],
$       [-3895613044071988203, 4502005601570653020], [-5678520544694624259, -2474170709723556449],
$       [-3175427455172594267, 1391930450919579204], [8145189937659070773, 1844481201585566213],
$       [5130748573837568644, -1643766123154551652], [3826267397981749694, -2571994279142846670],
$       [9199012813542789517, -8439436884508646412], [4711635609921128537, 1946248624261727016],
$       [-3370772824870878566, -5718538755538814561], [4826876481913689255, 8623025772767174249],
$       [-7678529678066023741, -3583411444871132756], [5269454237100713897, 8124490730384198527],
$       [-1226578066203486658, -4827553261654891269], [-6610680648437173464, -8112450597396923468],
$       [-1435170570793043059, 7637406210811426868], [-7748869542599122999, -2571994279142846670],
$       [-37118762498358469, 4498917917652842215], [-6640823369404702926, -7460719608794588863],
$       [-7592385543957753152, -5841373871086750166], [-7814424544859295254, 1707002563141697815],
$       [-2364803245270017064, -1730282697225782840], [-2275904223664082573, -5803787795654365255],
$       [-3726536830285366225, -8149198792951037667], [-3063814485243441001, 108537032002809076],
$       [-4861795492992289649, 3596918148048145796], [-6695099902834876412, 5099508561938047479],
$       [-1643832851819373537, 3098596153705120906], [908663512614572155, -4311534284349557501],
$       [7785730151808024183, -7929781759953652539], [-3546211500989383541, 7275826013143507501],
$       [8381441592863557334, 2327309644824652499], [6492373707580630896, 4192939174893560903],
$       [572211070139030143, 709466475383052760], [-4972759898372185857, 4338532337929596758],
$       [-7019877111645659794, 6596324686417136849], [-8076768312590025830, 2765228357547676163],
$       [8868219359613490667, 6405973007399939277], [-9034529897535759099, -9008181665690933005],
$       [8624308888451280299, 5599322668969595309], [3717981750448514978, 8025498888737249597]]}
