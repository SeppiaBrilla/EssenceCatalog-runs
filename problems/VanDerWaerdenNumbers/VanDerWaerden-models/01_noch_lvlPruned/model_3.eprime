language ESSENCE' 1.0

given k: int(1..)
given l: int(1..)
given n: int(1..)
find p_PartitionAsSet_ExplicitR5_ExplicitVarSizeWithMarker_Marker: matrix indexed by [int(1..k)] of int(0..n)
find p_PartitionAsSet_ExplicitR5_ExplicitVarSizeWithMarker_Values: matrix indexed by [int(1..k), int(1..n)] of int(1..n)
branching on
    [p_PartitionAsSet_ExplicitR5_ExplicitVarSizeWithMarker_Marker,
     p_PartitionAsSet_ExplicitR5_ExplicitVarSizeWithMarker_Values]
such that
    and([and([and([!and([or([q17 <= p_PartitionAsSet_ExplicitR5_ExplicitVarSizeWithMarker_Marker[q14] /\
                             p_PartitionAsSet_ExplicitR5_ExplicitVarSizeWithMarker_Values[q14, q17] = start + i * width
                                 | q17 : int(1..n)])
                             | i : int(0..l - 1)])
                       | width : int(1..(n - start + 1) / (l - 1))])
                  | start : int(1..n - l + 1)])
             | q14 : int(1..k)]),
    alldifferent_except([toInt(q21 <= p_PartitionAsSet_ExplicitR5_ExplicitVarSizeWithMarker_Marker[q20]) *
                         catchUndef(p_PartitionAsSet_ExplicitR5_ExplicitVarSizeWithMarker_Values[q20, q21], 0)
                             | q20 : int(1..k), q21 : int(1..n)],
                        0),
    and([p_PartitionAsSet_ExplicitR5_ExplicitVarSizeWithMarker_Marker[q22] >= 1 | q22 : int(1..k)]),
    and([flatten([[p_PartitionAsSet_ExplicitR5_ExplicitVarSizeWithMarker_Marker[q4]; int(1)],
                  [p_PartitionAsSet_ExplicitR5_ExplicitVarSizeWithMarker_Values[q4, q10] | q10 : int(1..n)];
                      int(1..2)])
         <lex
         flatten([[p_PartitionAsSet_ExplicitR5_ExplicitVarSizeWithMarker_Marker[q4 + 1]; int(1)],
                  [p_PartitionAsSet_ExplicitR5_ExplicitVarSizeWithMarker_Values[q4 + 1, q11] | q11 : int(1..n)];
                      int(1..2)])
             | q4 : int(1..k - 1)]),
    and([and([q6 + 1 <= p_PartitionAsSet_ExplicitR5_ExplicitVarSizeWithMarker_Marker[q5] ->
              p_PartitionAsSet_ExplicitR5_ExplicitVarSizeWithMarker_Values[q5, q6] <
              p_PartitionAsSet_ExplicitR5_ExplicitVarSizeWithMarker_Values[q5, q6 + 1]
                  | q6 : int(1..n - 1)])
             | q5 : int(1..k)]),
    and([and([q7 > p_PartitionAsSet_ExplicitR5_ExplicitVarSizeWithMarker_Marker[q5] ->
              p_PartitionAsSet_ExplicitR5_ExplicitVarSizeWithMarker_Values[q5, q7] = 1
                  | q7 : int(1..n)])
             | q5 : int(1..k)]),
    and([p_PartitionAsSet_ExplicitR5_ExplicitVarSizeWithMarker_Marker[q5] <= n | q5 : int(1..k)]),
    n = sum([p_PartitionAsSet_ExplicitR5_ExplicitVarSizeWithMarker_Marker[q12] | q12 : int(1..k)])

$ Conjure's
$ {"finds": [{"Name": "p"}], "givens": [{"Name": "k"}, {"Name": "l"}, {"Name": "n"}], "enumGivens": [],
$  "enumLettings": [], "lettings": [], "unnameds": [], "strategyQ": {"PickFirst": []}, "strategyA": {"PickAll": []},
$  "trailCompact":
$      [[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 3, 4], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1]],
$  "trailVerbose": [], "trailRewrites": [], "nameGenState": [["q", 24]], "nbExtraGivens": 0,
$  "representations":
$      [[{"Name": "k"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "n"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "l"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "p"},
$        {"DomainPartition":
$             [{"Partition_AsSet": [{"Set_Explicit": []}, {"Set_ExplicitVarSizeWithMarker": []}]},
$              {"isRegular": false,
$               "partsNum":
$                   {"SizeAttr_Size":
$                        {"Reference":
$                             [{"Name": "k"},
$                              {"DeclHasRepr":
$                                   ["Given", {"Name": "k"},
$                                    {"DomainInt":
$                                         [{"TagInt": []},
$                                          [{"RangeLowerBounded":
$                                                {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}},
$               "partsSize":
$                   {"SizeAttr_MaxSize":
$                        {"Reference":
$                             [{"Name": "n"},
$                              {"DeclHasRepr":
$                                   ["Given", {"Name": "n"},
$                                    {"DomainInt":
$                                         [{"TagInt": []},
$                                          [{"RangeLowerBounded":
$                                                {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}}},
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference":
$                                [{"Name": "n"},
$                                 {"DeclHasRepr":
$                                      ["Given", {"Name": "n"},
$                                       {"DomainInt":
$                                            [{"TagInt": []},
$                                             [{"RangeLowerBounded":
$                                                   {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]}]}]],
$  "representationsTree":
$      [[{"Name": "k"}, [{"rootLabel": null, "subForest": []}]], [{"Name": "l"}, [{"rootLabel": null, "subForest": []}]],
$       [{"Name": "n"}, [{"rootLabel": null, "subForest": []}]],
$       [{"Name": "p"},
$        [{"rootLabel": {"Partition_AsSet": [{"Set_Explicit": []}, {"Set_ExplicitVarSizeWithMarker": []}]},
$          "subForest": [{"rootLabel": null, "subForest": []}]}]]],
$  "originalDomains":
$      [[{"Name": "k"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "l"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "n"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "p"},
$        {"DomainPartition":
$             [[],
$              {"isRegular": false, "partsNum": {"SizeAttr_Size": {"Reference": [{"Name": "k"}, null]}},
$               "partsSize":
$                   {"SizeAttr_MaxSize":
$                        {"Reference":
$                             [{"Name": "n"},
$                              {"DeclNoRepr":
$                                   ["Given", {"Name": "n"},
$                                    {"DomainInt":
$                                         [{"TagInt": []},
$                                          [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]},
$                                    {"NoRegion": []}]}]}}},
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference": [{"Name": "n"}, null]}]}]]}]}]],
$  "trailGeneralised":
$      [[2823086823473742364, -2249185803347430936], [-2477784404451036580, -5296734508237410931],
$       [-616130232306491887, 3683243402883139213], [1756925689127520207, 943241379948003836],
$       [-5159241614220294461, -1935158241006173606], [361804908590546425, 3731844600374098875],
$       [-1951236124094943863, -8286236437049811975], [4925809055520839829, 6443528169221259472],
$       [-5230427846292454611, 864926044462366856], [4711234576944985149, -7690767107154450102],
$       [7322188475621459731, 6980298579594834718], [-1823285224051222719, 6092949235681333858],
$       [5065746797929355356, 3395589478958356678], [-4475561363718186426, -1089222168989838969],
$       [-1566373324900409606, 7165913086638248749], [-5790626291761948853, 4098998621245361695],
$       [-4634523744427394935, -5377011527399427537], [-471833309261886135, 5445063471973438426],
$       [-9164705565404296537, -9177876407998054006], [146531641031922136, -2534662834851340047],
$       [2510640197510465653, 2165964076526503223], [-2415974908416614225, 8874692833930384053],
$       [408806642241035315, 7445932654523811101], [-1695039806432539825, 5607502406220986786],
$       [-8686110883773603873, -6012925416848720964], [7995216102211955635, 1179915252692655937],
$       [-3121656161153077487, -5454501758559009878], [-3140462717584776897, 130069256512827493],
$       [7076095418607499967, 4521951686911198585], [-9128490009488112258, -1620411123486194821],
$       [-9123545153270239687, -8901537377861711433], [6190935040004153875, -1489958154549764131],
$       [5226452395901965180, -6924566787061298427], [-9025327666005887521, -6610750534734472784],
$       [-4972759898372185857, 2936594740881906221], [-7019877111645659794, 6596324686417136849],
$       [-8076768312590025830, 2765228357547676163], [8868219359613490667, 6405973007399939277],
$       [-9034529897535759099, -9008181665690933005], [8624308888451280299, 5599322668969595309],
$       [3717981750448514978, 8025498888737249597]]}
