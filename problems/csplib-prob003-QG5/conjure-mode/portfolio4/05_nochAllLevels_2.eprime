language ESSENCE' 1.0

given n: int(1..100)
letting let1 be n - 1
letting let2 be n - 1
letting let3 be n - 1
find quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker:
        int(0..(1 + (let1 - 0)) * (1 + (let2 - 0)) * (1 + (let3 - 0)))
find quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_1:
        matrix indexed by [int(1..(1 + (let1 - 0)) * (1 + (let2 - 0)) * (1 + (let3 - 0)))] of int(0..let1)
find quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_2:
        matrix indexed by [int(1..(1 + (let1 - 0)) * (1 + (let2 - 0)) * (1 + (let3 - 0)))] of int(0..let2)
find quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_2:
        matrix indexed by [int(1..(1 + (let1 - 0)) * (1 + (let2 - 0)) * (1 + (let3 - 0)))] of int(0..let3)
branching on
    [quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker,
     quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_1,
     quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_2,
     quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_2]
such that
    and([and([allDiff([sum([toInt(q34 <= quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker /\
                                  (quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_1[q34]
                                   = v
                                   /\
                                   quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_2[q34]
                                   = q31_2))
                            *
                            catchUndef(quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_2
                                           [q34],
                                       0)
                                | q34 : int(1..(1 + (let1 - 0)) * (1 + (let2 - 0)) * (1 + (let3 - 0)))])
                           | q31_2 : int(0..n - 1)]),
              and([or([q37 <= quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker /\
                       (quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_1[q37] = v /\
                        quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_2[q37] = q31_2)
                           | q37 : int(1..(1 + (let1 - 0)) * (1 + (let2 - 0)) * (1 + (let3 - 0)))])
                       | q31_2 : int(0..n - 1)]),
              and([or([q32_2 = q31_2 | q32_2 : int(0..n - 1)]) | q31_2 : int(0..n - 1)]);
                  int(1..3)])
             | v : int(0..n - 1)]),
    and([and([allDiff([sum([toInt(q9 <= quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker /\
                                  (quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_1[q9]
                                   = q6_1
                                   /\
                                   quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_2[q9]
                                   = v))
                            *
                            catchUndef(quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_2
                                           [q9],
                                       0)
                                | q9 : int(1..(1 + (let1 - 0)) * (1 + (let2 - 0)) * (1 + (let3 - 0)))])
                           | q6_1 : int(0..n - 1)]),
              and([or([q12 <= quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker /\
                       (quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_1[q12] = q6_1 /\
                        quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_2[q12] = v)
                           | q12 : int(1..(1 + (let1 - 0)) * (1 + (let2 - 0)) * (1 + (let3 - 0)))])
                       | q6_1 : int(0..n - 1)]),
              and([or([q7_1 = q6_1 | q7_1 : int(0..n - 1)]) | q6_1 : int(0..n - 1)]);
                  int(1..3)])
             | v : int(0..n - 1)]),
    and([or([q14 <= quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker /\
             (quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_1[q14] =
              sum([toInt(q16 <= quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker /\
                         (quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_1[q16] =
                          sum([toInt(q18 <= quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker
                                     /\
                                     (quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_1
                                          [q18]
                                      = b
                                      /\
                                      quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_2
                                          [q18]
                                      = a))
                               *
                               catchUndef(quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_2
                                              [q18],
                                          0)
                                   | q18 : int(1..(1 + (let1 - 0)) * (1 + (let2 - 0)) * (1 + (let3 - 0)))])
                          /\ quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_2[q16] = b
                          /\
                          or([q21 <= quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker /\
                              (quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_1[q21] = b
                               /\
                               quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_2[q21] =
                               a) | q21 : int(1..(1 + (let1 - 0)) * (1 + (let2 - 0)) * (1 + (let3 - 0)))])))
                   * catchUndef(quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q16], 0)
                       | q16 : int(1..(1 + (let1 - 0)) * (1 + (let2 - 0)) * (1 + (let3 - 0)))])
              /\ quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_2[q14] = b
              /\
              or([q24 <= quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker /\
                  (quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_1[q24] =
                   sum([toInt(q26 <= quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker /\
                              (quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_1[q26] = b
                               /\
                               quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_2[q26] =
                               a))
                        *
                        catchUndef(quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q26],
                                   0)
                            | q26 : int(1..(1 + (let1 - 0)) * (1 + (let2 - 0)) * (1 + (let3 - 0)))])
                   /\ quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_2[q24] = b
                   /\
                   or([q29 <= quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker /\
                       (quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_1[q29] = b /\
                        quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_2[q29] = a)
                           | q29 : int(1..(1 + (let1 - 0)) * (1 + (let2 - 0)) * (1 + (let3 - 0)))]))
                      | q24 : int(1..(1 + (let1 - 0)) * (1 + (let2 - 0)) * (1 + (let3 - 0)))])
              /\ quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q14] = a)
                 | q14 : int(1..(1 + (let1 - 0)) * (1 + (let2 - 0)) * (1 + (let3 - 0)))])
             | a : int(0..n - 1), b : int(0..n - 1)]),
    and([q1 + 1 <= quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker ->
         flatten([flatten([[quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_1[q1];
                                int(1)],
                           [quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_2[q1];
                                int(1)];
                               int(1..2)]),
                  [quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q1]; int(1)];
                      int(1..2)])
         <lex
         flatten([flatten([[quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_1[q1 + 1];
                                int(1)],
                           [quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_2[q1 + 1];
                                int(1)];
                               int(1..2)]),
                  [quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q1 + 1]; int(1)];
                      int(1..2)])
             | q1 : int(1..(1 + (let1 - 0)) * (1 + (let2 - 0)) * (1 + (let3 - 0)) - 1)]),
    and([q2 > quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker ->
         quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_1[q2] = 0 /\
         quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_2[q2] = 0
         /\ quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_2[q2] = 0
             | q2 : int(1..(1 + (let1 - 0)) * (1 + (let2 - 0)) * (1 + (let3 - 0)))]),
    and([1 =
         sum([toInt(q30 <= quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Marker /\
                    (quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_1[q30] = q4_1 /\
                     quasigroup_FunctionAsRelation_RelationAsSet_ExplicitVarSizeWithMarker_Values_1_2[q30] = q4_2))
                  | q30 : int(1..(1 + (let1 - 0)) * (1 + (let2 - 0)) * (1 + (let3 - 0)))])
             | q4_1 : int(0..let1), q4_2 : int(0..let2)])

$ Conjure's
$ {"finds": [{"Name": "quasigroup"}], "givens": [{"Name": "n"}], "enumGivens": [], "enumLettings": [],
$  "lettings":
$      [[{"Name": "g"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagInt": []},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                          {"Op":
$                               {"MkOpMinus":
$                                    [{"Reference":
$                                          [{"Name": "n"},
$                                           {"DeclNoRepr":
$                                                ["Given", {"Name": "n"},
$                                                 {"DomainInt":
$                                                      [{"TagInt": []},
$                                                       [{"RangeBounded":
$                                                             [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                                              {"Constant": {"ConstantInt": [{"TagInt": []}, 100]}}]}]]},
$                                                 {"NoRegion": []}]}]},
$                                     {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}]}}]}]]}}],
$       [{"MachineName": ["let", 1, []]},
$        {"Op":
$             {"MkOpMinus":
$                  [{"Reference":
$                        [{"Name": "n"},
$                         {"DeclNoRepr":
$                              ["Given", {"Name": "n"},
$                               {"DomainInt":
$                                    [{"TagInt": []},
$                                     [{"RangeBounded":
$                                           [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                            {"Constant": {"ConstantInt": [{"TagInt": []}, 100]}}]}]]},
$                               {"NoRegion": []}]}]},
$                   {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}]}}],
$       [{"MachineName": ["let", 2, []]},
$        {"Op":
$             {"MkOpMinus":
$                  [{"Reference":
$                        [{"Name": "n"},
$                         {"DeclNoRepr":
$                              ["Given", {"Name": "n"},
$                               {"DomainInt":
$                                    [{"TagInt": []},
$                                     [{"RangeBounded":
$                                           [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                            {"Constant": {"ConstantInt": [{"TagInt": []}, 100]}}]}]]},
$                               {"NoRegion": []}]}]},
$                   {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}]}}],
$       [{"MachineName": ["let", 3, []]},
$        {"Op":
$             {"MkOpMinus":
$                  [{"Reference":
$                        [{"Name": "n"},
$                         {"DeclNoRepr":
$                              ["Given", {"Name": "n"},
$                               {"DomainInt":
$                                    [{"TagInt": []},
$                                     [{"RangeBounded":
$                                           [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                            {"Constant": {"ConstantInt": [{"TagInt": []}, 100]}}]}]]},
$                               {"NoRegion": []}]}]},
$                   {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}]}}]],
$  "unnameds": [], "strategyQ": {"PickFirst": []}, "strategyA": {"PickAll": []},
$  "trailCompact":
$      [[1, 1, 1], [1, 1, 1], [1, 2, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1]],
$  "nameGenState": [["let", 4], ["q", 38]], "nbExtraGivens": 0,
$  "representations":
$      [[{"Name": "n"},
$        {"DomainInt":
$             [{"TagInt": []},
$              [{"RangeBounded":
$                    [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                     {"Constant": {"ConstantInt": [{"TagInt": []}, 100]}}]}]]}],
$       [{"Name": "quasigroup"},
$        {"DomainFunction":
$             [{"Function_AsRelation": {"Relation_AsSet": {"Set_ExplicitVarSizeWithMarker": []}}},
$              [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$              {"DomainTuple":
$                   [{"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                                 {"Reference":
$                                      [{"MachineName": ["let", 1, []]},
$                                       {"Alias":
$                                            {"Op":
$                                                 {"MkOpMinus":
$                                                      [{"Reference":
$                                                            [{"Name": "n"},
$                                                             {"DeclHasRepr":
$                                                                  ["Given", {"Name": "n"},
$                                                                   {"DomainInt":
$                                                                        [{"TagInt": []},
$                                                                         [{"RangeBounded":
$                                                                               [{"Constant":
$                                                                                     {"ConstantInt":
$                                                                                          [{"TagInt": []}, 1]}},
$                                                                                {"Constant":
$                                                                                     {"ConstantInt":
$                                                                                          [{"TagInt": []},
$                                                                                           100]}}]}]]}]}]},
$                                                       {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}]}}}]}]}]]},
$                    {"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                                 {"Reference":
$                                      [{"MachineName": ["let", 2, []]},
$                                       {"Alias":
$                                            {"Op":
$                                                 {"MkOpMinus":
$                                                      [{"Reference":
$                                                            [{"Name": "n"},
$                                                             {"DeclHasRepr":
$                                                                  ["Given", {"Name": "n"},
$                                                                   {"DomainInt":
$                                                                        [{"TagInt": []},
$                                                                         [{"RangeBounded":
$                                                                               [{"Constant":
$                                                                                     {"ConstantInt":
$                                                                                          [{"TagInt": []}, 1]}},
$                                                                                {"Constant":
$                                                                                     {"ConstantInt":
$                                                                                          [{"TagInt": []},
$                                                                                           100]}}]}]]}]}]},
$                                                       {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}]}}}]}]}]]}]},
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                           {"Reference":
$                                [{"MachineName": ["let", 3, []]},
$                                 {"Alias":
$                                      {"Op":
$                                           {"MkOpMinus":
$                                                [{"Reference":
$                                                      [{"Name": "n"},
$                                                       {"DeclHasRepr":
$                                                            ["Given", {"Name": "n"},
$                                                             {"DomainInt":
$                                                                  [{"TagInt": []},
$                                                                   [{"RangeBounded":
$                                                                         [{"Constant":
$                                                                               {"ConstantInt": [{"TagInt": []}, 1]}},
$                                                                          {"Constant":
$                                                                               {"ConstantInt":
$                                                                                    [{"TagInt": []}, 100]}}]}]]}]}]},
$                                                 {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}]}}}]}]}]]}]}]],
$  "representationsTree":
$      [[{"Name": "n"}, [{"rootLabel": null, "subForest": []}]],
$       [{"Name": "quasigroup"},
$        [{"rootLabel": {"Function_AsRelation": {"Relation_AsSet": {"Set_ExplicitVarSizeWithMarker": []}}},
$          "subForest":
$              [{"rootLabel": null,
$                "subForest": [{"rootLabel": null, "subForest": []}, {"rootLabel": null, "subForest": []}]},
$               {"rootLabel": null, "subForest": []}]}]]],
$  "originalDomains":
$      [[{"Name": "n"},
$        {"DomainInt":
$             [{"TagInt": []},
$              [{"RangeBounded":
$                    [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                     {"Constant": {"ConstantInt": [{"TagInt": []}, 100]}}]}]]}],
$       [{"Name": "quasigroup"},
$        {"DomainFunction":
$             [[], [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$              {"DomainTuple":
$                   [{"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                                 {"Reference": [{"MachineName": ["let", 1, []]}, null]}]}]]},
$                    {"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                                 {"Reference": [{"MachineName": ["let", 2, []]}, null]}]}]]}]},
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 0]}},
$                           {"Reference": [{"MachineName": ["let", 3, []]}, null]}]}]]}]}]],
$  "trailGeneralised":
$      [[387928483032678660, 6952536840990976086], [-5401539589402328412, -4469054381565545413],
$       [-2743256582558052174, 8850794579559277324], [4004651198253738734, 887678540566852812],
$       [-4724581679904668911, 8968035760329892324], [-5166972190445900032, 3420578386226623401],
$       [9184686662149404521, 6625430833988457607], [-3985213645735273660, 3039768444079381703],
$       [6618157196225792294, -201316231999465655], [4933175073893754421, 5785053253247242781],
$       [-333988247591947192, 8947582721788360231], [8552861280980466294, 4759523156097505551],
$       [-6825457796648243168, 878993420731092110], [-1018114584686666152, -1442866614722544957],
$       [-902421153772239832, 6292846740516407830], [3542984920758970888, -7802209381121111268],
$       [-3327754075245440365, 3568783910038719571], [-5229054908608883758, 3507336227574141784],
$       [-4112419812428902314, -201316231999465655], [-8297282560279554911, -2607566093766434853],
$       [3610880993823432566, 7606164850916556451], [-4732205252776086258, -8773142208206861321],
$       [3076820211318680976, 2797039220732049888], [8847831095886557498, -4231376512832607960],
$       [3303384949670422178, 45265428476558070], [-3486850976613866382, 3187792346552331493],
$       [-1809700163536838699, 6292946475694568105], [-986641872477897641, 4868177286342677225],
$       [-7432723918430986625, -8857026669471339628], [-7885999559452136577, -805668060786148559],
$       [5594062868200231007, -5147301441124040156], [2055839161253985106, -201316231999465655],
$       [284173363874427172, 7188367959864309343], [4322415849250811431, 5458896241950364237],
$       [158929171140174441, 2852442915362800154], [3694007786081571737, 5472545420851850314],
$       [-3337947062083312516, -2163134356619898071], [2576843557630304928, 6680674592405148983],
$       [4163438266722509561, 5394128827162864372], [-2282214577912293858, -3322306764591587932],
$       [-2627531854662989204, -8438055240862190397], [3296116481906421404, 7563879526406577796],
$       [2811548758122814522, 2086727365514583316], [2694491861482300117, 8131291317494591843],
$       [-2942559032976364644, -4601586842589849391], [8763898064571546108, -7339936512651493184],
$       [-3455503662393910506, -5726599701270979257], [6959624871907586424, 8526664708375019262],
$       [-7317106607042340511, -7794752810467510233], [2712180770618226276, 8988083763395683993],
$       [-4094533925000750435, -7898159864834507273], [2152062638887510580, -4595096505119673788],
$       [3151121754362169184, 4029360546554363212], [8123521224134793744, 6446539854611865779],
$       [7256197379348314354, -7034776351021733176], [8692128290895237178, 4610241441097750555],
$       [5855766298363695780, 6169479502035860688], [448892916457345585, 7185471456219064767],
$       [4992002666848417413, -6843184465090476905], [8684240816513417287, -4702016093209873890],
$       [3163658559651095747, 1494309631195493627], [1226795524193727683, -2769288789428537577],
$       [-6476936993432694490, 4133201443058550395], [4398413183720996761, 7470506878710385063],
$       [8192312672786465522, 2679524699179885056], [3356292992727203493, -6562678631807321277],
$       [-2879675375553946363, -4643943286789388919], [48140383497314273, -2457792382113846625],
$       [-354213298673961012, 8505110556943296175], [-5758368003188716971, 7853817669061446558],
$       [-7005271727924546244, 6195164762282914407], [-4248486994276714554, 2648092827551824651],
$       [-3032855176112841080, 592518597682975622], [3579622343701731056, 680288981047040699],
$       [1211403340581882928, 7294483727111835402], [-648109429592115648, -7695439156007890580],
$       [5831573773090330491, 7445099084380942835], [9027545362548378114, -9068515104577617720],
$       [-6049502991195223343, -3554332452823710676], [-7038027063130464462, 3160255360473897955],
$       [-5864771541752709612, 6764737712544688599], [-7584033128653142124, 4129188373958616332],
$       [169296221270048486, -7293449669682525696], [1767292233970715546, 8036293014396584918],
$       [-5510270087237528458, 2996570341797968245], [-1235876715134779605, -2390958082473431203],
$       [-6499363558897184342, -7493389674181782701], [-7981199820713237532, -5417504266659728523],
$       [5485815226638160832, 7610372875733143746], [1899316949097943418, 7901741264586596979],
$       [-4520429252135295004, 9119128482784577556], [-4864806020912740617, -2911546788316046322],
$       [-5519664779395539696, 3367559734191998548], [5649038057904453404, -5926532674965372620],
$       [8290754106150821691, -7619687243757744480], [6645948115408342682, -7194705420481209901],
$       [-7625143969340164294, 1267523202131512345], [1945324854182768024, -6317773288175844065],
$       [7875092979158991821, -3459489523505961921], [-2939394412128593172, -7237115438492272930],
$       [-5141682504541210491, 6861786273515627911], [-3767916707642214465, -2560822451992168933],
$       [363328197712641233, 849345988611895126], [1184145561572120625, -6892962825869638805],
$       [-1171979336201695855, -5474865325868787910], [-8674816223838930715, 3178679757195035948],
$       [4101031014957792698, -6840122822265899637], [4965180573703929423, 167361968917383560],
$       [494132930436287404, -4697110230043772212], [-4909959618393901541, 5257824342730911491],
$       [-9088640996511931753, -91801040097057641], [-3675353083873857763, -7469992887240786420],
$       [379312661767130675, -4605969418848686096], [-7498881402411797241, 3731103023204153638],
$       [1482434716790579419, 654028421543019429], [214065002277361304, 2359177289835696437],
$       [3917542795308731869, -3616130900056742189], [1718259675747588038, -4903820219384326841],
$       [-9003538532889216202, 677808327956513460], [384438553211813014, -344548437601279030],
$       [-3105235963228797937, -8438801837772261568], [-4771628416148954810, 8903909962378706147],
$       [-511159309941558090, -3169787875994912914], [8326333647946258783, 7825025441130137795],
$       [1471655388842231907, 2311602492869779088], [-2430985114798038767, -6883449260749175836],
$       [7854248623071185525, 5671416518724260544], [3603090752299569605, 7932292944083900210],
$       [5665230873270157048, -7966485772190947474], [-8160294071361613524, -8117473185740538892],
$       [6276025166943589068, -8729042846924148690], [-8731703460833150100, 3572962619017405711],
$       [4142645202519915666, 592841270536767466], [-6270835659386682442, 2555801252179905534],
$       [-5995829559606880260, 5920164428756145748], [-3374933247522008476, -8382120121352724331],
$       [5353262355149673821, -5058703259381613417], [6292014501640923972, 7113460515759994291],
$       [-1989899448818566989, -4670606974014135447], [-6608963130286114183, 5027808266419740799],
$       [4270356185452338908, 1252154928945032979], [-2834403069319851704, -1135295259003700095],
$       [-1452782342045700282, 7687574284920520568], [-830762079015480490, 7089520941116754129],
$       [-8369004619076914602, -5329156665136245600], [5903969120880319694, 4854792958532544104],
$       [9002911971923964879, -2166460359072312618], [4924518625828021818, 7910538855899849154],
$       [-4617067599316737941, -4670606974014135447], [-643904746422115943, -7159350268915700427],
$       [-926663345177902308, 4108355796232687759], [-8419109610912105196, -5779537057682421265],
$       [-3511540077202334244, -7444811085134233004], [-6334969178050492262, 2178883434356122164],
$       [9095440133040826842, -6678531108158694646], [-4299888552531676318, -8393861843438086983],
$       [-6052562296929607139, 1854294026585395968], [4210097910438814525, 2838161255485241069],
$       [-7659241243431774475, -854390677983384140], [-794335257659625339, -1205938853259222443],
$       [806156440646879333, -5147301441124040156], [5221625187284350200, -4670606974014135447],
$       [-5167808445051413578, 7014268714392015791], [-2111679799303848707, -809268630782491423],
$       [1471496636172220910, -3714481767979122345], [-5229604262728262933, -3271642409040134769],
$       [-485397613471711974, -5264952029190117502], [8829538862081309988, 333683875472807774],
$       [6499441827485627468, 7750486431064630682], [7923353440456785829, 8357367419787206627],
$       [-7138335936310435236, 3599304874778534350], [398011229460660263, 7051877523735243988]],
$  "trailVerbose": [], "trailRewrites": []}
