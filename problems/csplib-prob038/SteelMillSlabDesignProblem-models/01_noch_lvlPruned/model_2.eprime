language ESSENCE' 1.0

given n_colours: int(1..)
given n_orders: int(1..)
given col_per_slab: int(1..)
given nbSizes: int(1..)
given fin1: int
given fin2: int
given ordSize_Function1D: matrix indexed by [int(1..n_orders)] of int(1..fin2)
given fin3: int
given ordCol_Function1D: matrix indexed by [int(1..n_orders)] of int(1..n_colours)
find cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Marker: int(0..2 ** n_orders * nbSizes)
find cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy:
        matrix indexed by [int(1..2 ** n_orders * nbSizes), int(1..n_orders)] of int(1..n_orders + 1)
find cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_2:
        matrix indexed by [int(1..2 ** n_orders * nbSizes)] of int(1..nbSizes)
branching on
    [cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Marker,
     cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy,
     cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_2]
minimising
    sum([toInt(q55 <= cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Marker) *
         catchUndef(cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_2[q55], 0)
             | q55 : int(1..2 ** n_orders * nbSizes)])
such that
    and([q40 <= cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Marker /\
         q48 <= cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Marker
         ->
         (or([cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                  [q40, q44]
              != n_orders + 1
              /\
              !or([cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                       [q48, q50]
                   != n_orders + 1
                   /\
                   cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                       [q48, q50]
                   =
                   cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                       [q40, q44]
                       | q50 : int(1..n_orders)])
                  | q44 : int(1..n_orders)])
          \/
          or([cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                  [q48, q51]
              != n_orders + 1
              /\
              !or([cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                       [q40, q46]
                   != n_orders + 1
                   /\
                   cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                       [q40, q46]
                   =
                   cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                       [q48, q51]
                       | q46 : int(1..n_orders)])
                  | q51 : int(1..n_orders)])
          ->
          sum([toInt(cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                         [q40, q42]
                     != n_orders + 1
                     /\
                     or([cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                             [q48, q53]
                         != n_orders + 1
                         /\
                         cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                             [q48, q53]
                         =
                         cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                             [q40, q42]
                             | q53 : int(1..n_orders)]))
                   | q42 : int(1..n_orders)])
          = 0)
             | q40 : int(1..2 ** n_orders * nbSizes), q48 : int(1..2 ** n_orders * nbSizes)]),
    and([or([q11 <= cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Marker /\
             or([cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                     [q11, q13]
                 != n_orders + 1
                 /\
                 cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                     [q11, q13]
                 = o | q13 : int(1..n_orders)])
                 | q11 : int(1..2 ** n_orders * nbSizes)])
             | o : int(1..n_orders)]),
    and([q28 <= cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Marker ->
         or([q21 <= cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Marker /\
             (and([cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                       [q21, q23]
                   != n_orders + 1
                   ->
                   or([cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                           [q28, q30]
                       != n_orders + 1
                       /\
                       cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                           [q28, q30]
                       =
                       cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                           [q21, q23]
                           | q30 : int(1..n_orders)])
                       | q23 : int(1..n_orders)])
              /\
              and([cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                       [q28, q31]
                   != n_orders + 1
                   ->
                   or([cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                           [q21, q26]
                       != n_orders + 1
                       /\
                       cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                           [q21, q26]
                       =
                       cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                           [q28, q31]
                           | q26 : int(1..n_orders)])
                       | q31 : int(1..n_orders)])
              /\
              cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_2[q21] >=
              sum([toInt(cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                             [q28, q32]
                         != n_orders + 1)
                   *
                   catchUndef(ordSize_Function1D
                                  [cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                                       [q28, q32]],
                              0)
                       | q32 : int(1..n_orders)]))
                 | q21 : int(1..2 ** n_orders * nbSizes)])
             | q28 : int(1..2 ** n_orders * nbSizes)]),
    and([q34 <= cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Marker ->
         sum([toInt(cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                        [q34, q35]
                    != n_orders + 1)
              *
              catchUndef(ordSize_Function1D
                             [cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                                  [q34, q35]],
                         0)
                  | q35 : int(1..n_orders)])
         <= cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_2[q34]
             | q34 : int(1..2 ** n_orders * nbSizes)]),
    and([q37 <= cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Marker ->
         sum([toInt(cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                        [q37, q38]
                    != n_orders + 1)
              *
              catchUndef(ordCol_Function1D
                             [cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                                  [q37, q38]],
                         0)
                  | q38 : int(1..n_orders)])
         <= col_per_slab
             | q37 : int(1..2 ** n_orders * nbSizes)]),
    and([q1 + 1 <= cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Marker ->
         flatten([[cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                       [q1, q14]
                       | q14 : int(1..n_orders)],
                  [cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_2[q1]; int(1)];
                      int(1..2)])
         <lex
         flatten([[cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                       [q1 + 1, q15]
                       | q15 : int(1..n_orders)],
                  [cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_2[q1 + 1]; int(1)];
                      int(1..2)])
             | q1 : int(1..2 ** n_orders * nbSizes - 1)]),
    and([q2 > cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Marker ->
         and([cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                  [q2, q16]
              = 1 | q16 : int(1..n_orders)])
         /\ cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_2[q2] = 1
             | q2 : int(1..2 ** n_orders * nbSizes)]),
    and([q3 <= cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Marker ->
         and([cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                  [q3, q4]
              <
              cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                  [q3, q4 + 1]
              \/
              cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                  [q3, q4]
              = n_orders + 1
                  | q4 : int(1..n_orders - 1)])
             | q3 : int(1..2 ** n_orders * nbSizes)]),
    and([q3 <= cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Marker ->
         and([cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                  [q3, q5]
              = n_orders + 1
              ->
              cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                  [q3, q5 + 1]
              = n_orders + 1
                  | q5 : int(1..n_orders - 1)])
             | q3 : int(1..2 ** n_orders * nbSizes)]),
    and([q17 <= cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Marker /\
         q18 <= cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Marker
         ->
         or([cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                 [q17, q19]
             !=
             cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                 [q18, q19]
                 | q19 : int(1..n_orders)])
         \/
         or([cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                 [q17, q19]
             !=
             cut_FunctionAsRelationR6_RelationAsSetR6_ExplicitVarSizeWithMarkerR6_Values_1_ExplicitVarSizeWithDummy
                 [q18, q19]
                 | q19 : int(1..n_orders)])
             | q17 : int(1..2 ** n_orders * nbSizes), q18 : int(1..2 ** n_orders * nbSizes), q18 > q17])

$ Conjure's
$ {"finds": [{"Name": "cut"}],
$  "givens":
$      [{"Name": "n_colours"}, {"Name": "n_orders"}, {"Name": "col_per_slab"}, {"Name": "nbSizes"}, {"Name": "ordSize"},
$       {"Name": "ordCol"}],
$  "enumGivens": [], "enumLettings": [],
$  "lettings":
$      [[{"Name": "sizes"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagInt": []},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                          {"Reference":
$                               [{"Name": "nbSizes"},
$                                {"DeclNoRepr":
$                                     ["Given", {"Name": "nbSizes"},
$                                      {"DomainInt":
$                                           [{"TagInt": []},
$                                            [{"RangeLowerBounded":
$                                                  {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]},
$                                      {"NoRegion": []}]}]}]}]]}}],
$       [{"Name": "Colour"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagInt": []},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                          {"Reference":
$                               [{"Name": "n_colours"},
$                                {"DeclNoRepr":
$                                     ["Given", {"Name": "n_colours"},
$                                      {"DomainInt":
$                                           [{"TagInt": []},
$                                            [{"RangeLowerBounded":
$                                                  {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]},
$                                      {"NoRegion": []}]}]}]}]]}}],
$       [{"Name": "Order"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagInt": []},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                          {"Reference":
$                               [{"Name": "n_orders"},
$                                {"DeclNoRepr":
$                                     ["Given", {"Name": "n_orders"},
$                                      {"DomainInt":
$                                           [{"TagInt": []},
$                                            [{"RangeLowerBounded":
$                                                  {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]},
$                                      {"NoRegion": []}]}]}]}]]}}]],
$  "unnameds": [], "strategyQ": {"PickFirst": []}, "strategyA": {"PickAll": []},
$  "trailCompact":
$      [[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 2, 4], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]],
$  "trailVerbose": [], "trailRewrites": [], "nameGenState": [["fin", 4], ["q", 56]], "nbExtraGivens": 3,
$  "representations":
$      [[{"MachineName": ["fin", 1, []]}, {"DomainInt": [{"TagInt": []}, []]}],
$       [{"Name": "n_orders"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"MachineName": ["fin", 2, []]}, {"DomainInt": [{"TagInt": []}, []]}],
$       [{"MachineName": ["fin", 3, []]}, {"DomainInt": [{"TagInt": []}, []]}],
$       [{"Name": "n_colours"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "nbSizes"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "cut"},
$        {"DomainFunction":
$             [{"Function_AsRelation": {"Relation_AsSet": {"Set_ExplicitVarSizeWithMarker": []}}},
$              [{"SizeAttr_None": []}, "PartialityAttr_Partial", "JectivityAttr_None"],
$              {"DomainSet":
$                   [{"Set_ExplicitVarSizeWithDummy": []}, {"SizeAttr_None": []},
$                    {"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                 {"Reference":
$                                      [{"Name": "n_orders"},
$                                       {"DeclHasRepr":
$                                            ["Given", {"Name": "n_orders"},
$                                             {"DomainInt":
$                                                  [{"TagInt": []},
$                                                   [{"RangeLowerBounded":
$                                                         {"Constant":
$                                                              {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]}]},
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference":
$                                [{"Name": "nbSizes"},
$                                 {"DeclHasRepr":
$                                      ["Given", {"Name": "nbSizes"},
$                                       {"DomainInt":
$                                            [{"TagInt": []},
$                                             [{"RangeLowerBounded":
$                                                   {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]}]}],
$       [{"Name": "ordSize"},
$        {"DomainFunction":
$             [{"Function_1D": []},
$              [{"SizeAttr_Size":
$                    {"Reference":
$                         [{"MachineName": ["fin", 1, []]},
$                          {"DeclHasRepr":
$                               ["Given", {"MachineName": ["fin", 1, []]}, {"DomainInt": [{"TagInt": []}, []]}]}]}},
$               "PartialityAttr_Total", "JectivityAttr_None"],
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference":
$                                [{"Name": "n_orders"},
$                                 {"DeclHasRepr":
$                                      ["Given", {"Name": "n_orders"},
$                                       {"DomainInt":
$                                            [{"TagInt": []},
$                                             [{"RangeLowerBounded":
$                                                   {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]},
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference":
$                                [{"MachineName": ["fin", 2, []]},
$                                 {"DeclHasRepr":
$                                      ["Given", {"MachineName": ["fin", 2, []]},
$                                       {"DomainInt": [{"TagInt": []}, []]}]}]}]}]]}]}],
$       [{"Name": "ordCol"},
$        {"DomainFunction":
$             [{"Function_1D": []},
$              [{"SizeAttr_Size":
$                    {"Reference":
$                         [{"MachineName": ["fin", 3, []]},
$                          {"DeclHasRepr":
$                               ["Given", {"MachineName": ["fin", 3, []]}, {"DomainInt": [{"TagInt": []}, []]}]}]}},
$               "PartialityAttr_Total", "JectivityAttr_None"],
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference":
$                                [{"Name": "n_orders"},
$                                 {"DeclHasRepr":
$                                      ["Given", {"Name": "n_orders"},
$                                       {"DomainInt":
$                                            [{"TagInt": []},
$                                             [{"RangeLowerBounded":
$                                                   {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]},
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference":
$                                [{"Name": "n_colours"},
$                                 {"DeclHasRepr":
$                                      ["Given", {"Name": "n_colours"},
$                                       {"DomainInt":
$                                            [{"TagInt": []},
$                                             [{"RangeLowerBounded":
$                                                   {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}]}]}]]}]}],
$       [{"Name": "col_per_slab"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]],
$  "representationsTree":
$      [[{"Name": "col_per_slab"}, [{"rootLabel": null, "subForest": []}]],
$       [{"Name": "cut"},
$        [{"rootLabel": {"Function_AsRelation": {"Relation_AsSet": {"Set_ExplicitVarSizeWithMarker": []}}},
$          "subForest":
$              [{"rootLabel": {"Set_ExplicitVarSizeWithDummy": []}, "subForest": [{"rootLabel": null, "subForest": []}]},
$               {"rootLabel": null, "subForest": []}]}]],
$       [{"MachineName": ["fin", 1, []]}, [{"rootLabel": null, "subForest": []}]],
$       [{"MachineName": ["fin", 2, []]}, [{"rootLabel": null, "subForest": []}]],
$       [{"MachineName": ["fin", 3, []]}, [{"rootLabel": null, "subForest": []}]],
$       [{"Name": "n_colours"}, [{"rootLabel": null, "subForest": []}]],
$       [{"Name": "n_orders"}, [{"rootLabel": null, "subForest": []}]],
$       [{"Name": "nbSizes"}, [{"rootLabel": null, "subForest": []}]],
$       [{"Name": "ordCol"},
$        [{"rootLabel": {"Function_1D": []},
$          "subForest": [{"rootLabel": null, "subForest": []}, {"rootLabel": null, "subForest": []}]}]],
$       [{"Name": "ordSize"},
$        [{"rootLabel": {"Function_1D": []},
$          "subForest": [{"rootLabel": null, "subForest": []}, {"rootLabel": null, "subForest": []}]}]]],
$  "originalDomains":
$      [[{"Name": "n_colours"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "n_orders"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "col_per_slab"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "nbSizes"},
$        {"DomainInt": [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}],
$       [{"Name": "ordSize"},
$        {"DomainFunction":
$             [[], [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference": [{"Name": "n_orders"}, null]}]}]]},
$              {"DomainInt":
$                   [{"TagInt": []}, [{"RangeLowerBounded": {"Constant": {"ConstantInt": [{"TagInt": []}, 1]}}}]]}]}],
$       [{"Name": "ordCol"},
$        {"DomainFunction":
$             [[], [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference": [{"Name": "n_orders"}, null]}]}]]},
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference": [{"Name": "n_colours"}, null]}]}]]}]}],
$       [{"Name": "cut"},
$        {"DomainFunction":
$             [[], [{"SizeAttr_None": []}, "PartialityAttr_Partial", "JectivityAttr_None"],
$              {"DomainSet":
$                   [[], {"SizeAttr_None": []},
$                    {"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                 {"Reference": [{"Name": "n_orders"}, null]}]}]]}]},
$              {"DomainInt":
$                   [{"TagInt": []},
$                    [{"RangeBounded":
$                          [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                           {"Reference": [{"Name": "nbSizes"}, null]}]}]]}]}]],
$  "trailGeneralised":
$      [[-5537237695060577168, 7976878561670142676], [5016102594557997230, -5542802899576854916],
$       [7573426456378379168, 397109881695252038], [-3342733162313966512, 7706198837071114349],
$       [-6520788745603489808, 3532918700565675576], [-6455977700390555016, 5491930370929017835],
$       [371877611608899168, 382404517330915671], [8846599565807473743, 3071136407061249398],
$       [3567691418440856499, 7114668280375180485], [-7199698498021581843, 8973610848581762756],
$       [-2074264289444099129, -7580220509500674818], [6929431751456583422, 43155633620102358],
$       [6129548843320361939, -2637739112151066511], [-1551386761452731863, -3692769068955422232],
$       [-125357103769461260, -6862019825127505434], [2828438406512549370, -1608280923564434744],
$       [8361347295852792238, -7580220509500674818], [6952319020926279645, 416719446594970084],
$       [-8625498825394007357, -8196750359657873388], [-4309055550479253726, -6862019825127505434],
$       [7909242439239248551, 7682650154279057006], [7820216561688367595, -7580220509500674818],
$       [-5765830209153961783, -2648696338804262364], [8973596685555493899, 8151742328781958159],
$       [2120414096159183031, 6097896801004305693], [2637254307360645722, -6862019825127505434],
$       [4579473545332619379, -4629580767287534777], [-1101077949141645751, -9149655497884726453],
$       [-4989018503178785681, -3882544417282631695], [4980476876234914181, 305956801904427567],
$       [1506763295604734549, 2043298132748279401], [2375619951408334629, 3971928826320634702],
$       [92357518629603147, -7580220509500674818], [8385919536547194729, -7910779339117701632],
$       [2522566469740593229, -3689569432756334381], [-6304220107128608697, -3048456776892681659],
$       [-1187767797940800626, -3352742289096376644], [-8387342447885813210, -7580220509500674818],
$       [1678682030411754259, 2768652385050135776], [264519661260732314, -7580229771710721083],
$       [-1222072370023674947, -2060753815638854527], [-2839370665736409790, -420313372404135131],
$       [-9196747041618304485, -8112450597396923468], [5306912781510697399, -526534763373385013],
$       [-2803282559823988779, -7580220509500674818], [-8916771066496213041, -6619051276384385904],
$       [4740646110277046075, 1990054023975588651], [-705950644077666507, -6530013468504970398],
$       [8100919426498982558, 2935263367075757907], [2056272426995790881, 5209457993516891814],
$       [-5685974458876738791, 5209457993516891814], [9155345028557471935, 3412918096252261727],
$       [8969369661674415207, 4592243149061653613], [5189405535313976145, 3920982921481461467],
$       [753208413128106337, -1273409536707437209], [3452166116401747049, 5496920320280557196],
$       [-7610238866704430330, 3896125387359070831], [3080391189467654025, 7662601894310483757],
$       [-5275449047872347908, 3107584072798332254], [7747465493300827778, -7580220509500674818],
$       [7632974090770756363, 473508283982242020], [6851871015536436210, 4883169497466467083],
$       [-3795977026325815251, 4364696512152560446], [5453542579245357091, 1558071556833016669],
$       [7936097780041277927, -2817825329290801211], [7964786491882746705, -6593994995238391041],
$       [6084879670593804649, 928755161113810309], [-3367769834629259375, 740923964231351736],
$       [5035285283306323111, 8328329231438199674], [3194086167646662061, -2347302411473087465],
$       [-3200829334188064427, 6366883186570476352], [-2509606580030846307, 9147044371997275498],
$       [6992270495322270219, -7580220509500674818], [2988533247087133764, -4342245327996272514],
$       [-9117174261349506236, 2980557100071699028], [-8720220601606617647, -1277034219443377018],
$       [1207317926186581771, -6046681800622640356], [8055452184964173087, 7375921628233795951],
$       [3459047208494190751, -7968223191920613420], [-1006758991742085321, 8866691199410832641],
$       [-2260540215400081503, -7394746313547710353], [3112218333465270492, 2981080494203904654],
$       [-1757012026102970735, -6770695212007047105], [-1920541201130758454, -3798432048328791752],
$       [7334367155338138148, -7580220509500674818], [-5724958410206195281, -2267931878958886278],
$       [-3938541058027457090, 2108428340427088847], [6608388465787109623, 3604973514271755422],
$       [-6928016744660915422, -5865705443689425061], [-7517439551653046322, -7580220509500674818],
$       [-1850981239733348622, -4658328112264098248], [1902742601533082438, 8431410017839889825],
$       [3851977196738357211, 3604973514271755422], [-6462396817753229971, 8662860857944854246],
$       [2271010866950923463, -7580220509500674818], [777626842928586650, -4964634548426922352],
$       [-4266121259921059789, 5347163398773471651], [-451131840036907998, 7169453491470766093],
$       [6495981209646198215, 3604973514271755422], [6444295122504786227, 6425244253078321490],
$       [1820499456877269113, 8460549620022623149], [712280882958506657, 4268586145679060084],
$       [-4931779151585178551, 1936312042673457545], [-55966403828166937, 6193813433914733443],
$       [2993717747360915312, -6959038647946362610], [-8411744442168585475, -7979786291593783930],
$       [-1635334316983800097, -7580220509500674818], [-7086172217732633109, 2553465251865986332],
$       [6956530727545557765, -952548408873464853], [-6915993182096444325, -3210645041210599425],
$       [-6809087123654984919, -2581655409556567965], [8882459650113164658, -8331048710748377241],
$       [-1683700811761320086, -7580220509500674818], [-77730065683416526, -5809257392957771908],
$       [-7273753122265384966, -856702398151383651], [-7847635876429217419, -6790099726013877743],
$       [-183020485587356216, 7361714834737207309], [-7598110730340700738, -3087322861087141154],
$       [7667577859038113020, -3651620433672672084], [-2284814877077082135, 1299097913676331166],
$       [7980274414941146276, -5290529174831877719], [-7777560897380118004, 5303676817375386589],
$       [-854933189583147532, 489736339383622357], [-6525238075066021624, -5407267022001796819],
$       [-8909560110725965873, 494834845583957288], [4618579875264743359, 6490214704132435741],
$       [-8053232724457399044, 8821191297903245010], [-3768319241888600766, 2780471945313126288],
$       [-4630436076644438320, 2780471945313126288], [-3258031035585285816, -9039524903993977715],
$       [4478820391974892531, 106051517374231103], [1698421145900491070, -621557032681135386],
$       [8764165276444463510, -1138083969326521378], [6107365353371680847, 397816366712924677],
$       [-8558951666249835997, -108403354797084535], [5998101738850373193, 9112952556418263108],
$       [-6600806533499095701, -6371937519633502880], [-6290280431239382825, -8539892471222921748],
$       [-4836215754550167629, 3571668425611135665], [7964689800491223925, 559703931037796623],
$       [-2722642676343288651, -4058633882253793494], [-3276663918213201867, 7068609562577523347],
$       [-9222732011769976745, -3973646890009498368], [-3060205457554217738, 3699993887781007193],
$       [2331291959141802150, -5963332675673489559], [-1299475118875092007, 6245271438466282349],
$       [269784240081896661, 3688671531812386077], [-5654264374953826942, 6886925878358841969],
$       [-316625099872182595, -8324919289843353095], [2468457663984893905, -643775702303697451],
$       [-1286888249721460769, -8190934103258578820], [-2749957026423689249, -4965920122539500503],
$       [2927437875810255043, -3074501598535679229], [-9192642184854152049, 127337169382131299],
$       [4797865719639202007, -8488303116750499109], [-2064650091771580385, -707914432035806403],
$       [4252341227937374374, -7560628477456532731], [6424543806421680456, -5938132606059570280],
$       [-8449652382250129974, 1853435918693591352], [7315899662612417642, -2029955278561233498],
$       [2136800754250258453, 8641238607217322698], [-4663681056262911383, -7580220509500674818],
$       [4424136630327475445, 4625028035937529870], [1716552036586816025, 1164864077325993169],
$       [-2002583967124174577, -8734896493783232316], [8940664555300721640, 5249203750165412190],
$       [-1647064497191439040, 6498287275383395048], [1542117803796234650, 1113615913686678095],
$       [-6981053988716446158, 6087144790210368454], [-643618882641131254, 3230941700899500391],
$       [2620730040881611134, -3197525899097760888], [2467116974879838383, -6496361784884741547],
$       [-1366539601198840011, 577077076638151337], [7000682984572905183, -1980429630756169075],
$       [7931456346899476023, -8982313625290783699], [-7513108054276879857, -267401824316209541],
$       [-7054977139467973086, 7694520093783479643], [-9033301972031962999, -8940821509958234375],
$       [8993613185948270769, 6246029443405160411]]}
