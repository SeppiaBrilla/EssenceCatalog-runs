language ESSENCE' 1.0

find words_ExplicitVarSizeWithMarkerR15R17_Marker: int(0..4294967296)
find words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix:
        matrix indexed by [int(1..4294967296), int(1..8), int(1..4)] of bool
branching on
    [words_ExplicitVarSizeWithMarkerR15R17_Marker,
     words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix]
maximising words_ExplicitVarSizeWithMarkerR15R17_Marker
such that
    and([q70 <= words_ExplicitVarSizeWithMarkerR15R17_Marker ->
         sum([toInt(words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix[q70, q73_1, q73_2])
                  | q73_1 : int(1..8), q73_2 : int(1..4), q73_2 = 2])
         +
         sum([toInt(words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix[q70, q76_1, q76_2])
                  | q76_1 : int(1..8), q76_2 : int(1..4), q76_2 = 3])
         = 4 | q70 : int(1..4294967296)]),
    and([q46 <= words_ExplicitVarSizeWithMarkerR15R17_Marker /\ q47 <= words_ExplicitVarSizeWithMarkerR15R17_Marker ->
         sum([toInt(and([sum([toInt(words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                                        [q46, q48_1, q48_2])
                              * catchUndef(q48_2, 0)
                                  | q48_1 : int(1..8), q48_2 : int(1..4), q48_1 = i])
                         !=
                         sum([toInt(words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                                        [q47, q49_1, q49_2])
                              * catchUndef(q49_2, 0)
                                  | q49_1 : int(1..8), q49_2 : int(1..4), q49_1 = i]),
                         or([words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                                 [q46, q50_1, q50_2]
                             /\ q50_1 = i
                                 | q50_1 : int(1..8), q50_2 : int(1..4)]),
                         or([words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                                 [q47, q51_1, q51_2]
                             /\ q51_1 = i
                                 | q51_1 : int(1..8), q51_2 : int(1..4)]);
                             int(1..3)]))
                  | i : int(1..8)])
         >= 4
             | q46 : int(1..4294967296), q47 : int(1..4294967296), q47 > q46]),
    and([q52 <= words_ExplicitVarSizeWithMarkerR15R17_Marker /\ q53 <= words_ExplicitVarSizeWithMarkerR15R17_Marker ->
         sum([toInt(!or([and([1 =
                              sum([toInt(words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                                             [q52, q54_1, q54_2])
                                   * catchUndef(q54_2, 0)
                                       | q54_1 : int(1..8), q54_2 : int(1..4), q54_1 = 9 - i])
                              /\
                              4 =
                              sum([toInt(words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                                             [q53, q55_1, q55_2])
                                   * catchUndef(q55_2, 0)
                                       | q55_1 : int(1..8), q55_2 : int(1..4), q55_1 = i]),
                              or([words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                                      [q52, q56_1, q56_2]
                                  /\ q56_1 = 9 - i
                                      | q56_1 : int(1..8), q56_2 : int(1..4)]),
                              or([words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                                      [q53, q57_1, q57_2]
                                  /\ q57_1 = i
                                      | q57_1 : int(1..8), q57_2 : int(1..4)]);
                                  int(1..3)]),
                         and([2 =
                              sum([toInt(words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                                             [q52, q58_1, q58_2])
                                   * catchUndef(q58_2, 0)
                                       | q58_1 : int(1..8), q58_2 : int(1..4), q58_1 = 9 - i])
                              /\
                              3 =
                              sum([toInt(words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                                             [q53, q59_1, q59_2])
                                   * catchUndef(q59_2, 0)
                                       | q59_1 : int(1..8), q59_2 : int(1..4), q59_1 = i]),
                              or([words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                                      [q52, q60_1, q60_2]
                                  /\ q60_1 = 9 - i
                                      | q60_1 : int(1..8), q60_2 : int(1..4)]),
                              or([words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                                      [q53, q61_1, q61_2]
                                  /\ q61_1 = i
                                      | q61_1 : int(1..8), q61_2 : int(1..4)]);
                                  int(1..3)]),
                         and([3 =
                              sum([toInt(words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                                             [q52, q62_1, q62_2])
                                   * catchUndef(q62_2, 0)
                                       | q62_1 : int(1..8), q62_2 : int(1..4), q62_1 = 9 - i])
                              /\
                              2 =
                              sum([toInt(words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                                             [q53, q63_1, q63_2])
                                   * catchUndef(q63_2, 0)
                                       | q63_1 : int(1..8), q63_2 : int(1..4), q63_1 = i]),
                              or([words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                                      [q52, q64_1, q64_2]
                                  /\ q64_1 = 9 - i
                                      | q64_1 : int(1..8), q64_2 : int(1..4)]),
                              or([words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                                      [q53, q65_1, q65_2]
                                  /\ q65_1 = i
                                      | q65_1 : int(1..8), q65_2 : int(1..4)]);
                                  int(1..3)]),
                         and([4 =
                              sum([toInt(words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                                             [q52, q66_1, q66_2])
                                   * catchUndef(q66_2, 0)
                                       | q66_1 : int(1..8), q66_2 : int(1..4), q66_1 = 9 - i])
                              /\
                              1 =
                              sum([toInt(words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                                             [q53, q67_1, q67_2])
                                   * catchUndef(q67_2, 0)
                                       | q67_1 : int(1..8), q67_2 : int(1..4), q67_1 = i]),
                              or([words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                                      [q52, q68_1, q68_2]
                                  /\ q68_1 = 9 - i
                                      | q68_1 : int(1..8), q68_2 : int(1..4)]),
                              or([words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                                      [q53, q69_1, q69_2]
                                  /\ q69_1 = i
                                      | q69_1 : int(1..8), q69_2 : int(1..4)]);
                                  int(1..3)]);
                             int(1..4)]))
                  | i : int(1..8)])
         >= 4
             | q52 : int(1..4294967296), q53 : int(1..4294967296), q53 > q52]),
    and([q26 + 1 <= words_ExplicitVarSizeWithMarkerR15R17_Marker ->
         flatten([[-toInt(words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                              [q26, q33, q34])
                       | q34 : int(1..4)]
                      | q33 : int(1..8)])
         <lex
         flatten([[-toInt(words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                              [q26 + 1, q35, q36])
                       | q36 : int(1..4)]
                      | q35 : int(1..8)])
             | q26 : int(1..4294967295)]),
    and([q27 > words_ExplicitVarSizeWithMarkerR15R17_Marker ->
         and([and([words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix[q27, q37, q38] =
                   false
                       | q38 : int(1..4)])
                  | q37 : int(1..8)])
             | q27 : int(1..4294967296)]),
    and([q28 <= words_ExplicitVarSizeWithMarkerR15R17_Marker ->
         and([1 =
              sum([toInt(words_ExplicitVarSizeWithMarkerR15R17_Values_FunctionAsRelation_RelationAsMatrix
                             [q28, q39_1, q39_2])
                       | q39_1 : int(1..8), q39_2 : int(1..4), q39_1 = q31])
                  | q31 : int(1..8)])
             | q28 : int(1..4294967296)])

$ Conjure's
$ {"finds": [{"Name": "words"}], "givens": [], "enumGivens": [],
$  "enumLettings":
$      [{"LettingDomainDefnEnum": [{"Name": "Base"}, [{"Name": "A"}, {"Name": "C"}, {"Name": "G"}, {"Name": "T"}]]}],
$  "lettings":
$      [[{"Name": "Base_EnumSize"}, {"Constant": {"ConstantInt": [{"TagInt": []}, 4]}}],
$       [{"Name": "Base"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagEnum": "Base"},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagEnum": "Base"}, 1]}},
$                          {"Constant": {"ConstantInt": [{"TagEnum": "Base"}, 4]}}]}]]}}],
$       [{"Name": "Index"},
$        {"Domain":
$             {"DomainInt":
$                  [{"TagInt": []},
$                   [{"RangeBounded":
$                         [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                          {"Constant": {"ConstantInt": [{"TagInt": []}, 8]}}]}]]}}]],
$  "unnameds": [], "strategyQ": {"PickFirst": []}, "strategyA": {"PickAll": []},
$  "trailCompact":
$      [[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 2, 4], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$       [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]],
$  "nameGenState": [["q", 77]], "nbExtraGivens": 0,
$  "representations":
$      [[{"Name": "words"},
$        {"DomainSet":
$             [{"Set_ExplicitVarSizeWithMarker": []}, {"SizeAttr_None": []},
$              {"DomainFunction":
$                   [{"Function_AsRelation": {"Relation_AsMatrix": []}},
$                    [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$                    {"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                 {"Constant": {"ConstantInt": [{"TagInt": []}, 8]}}]}]]},
$                    {"DomainInt":
$                         [{"TagEnum": "Base"},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagEnum": "Base"}, 1]}},
$                                 {"Constant": {"ConstantInt": [{"TagEnum": "Base"}, 4]}}]}]]}]}]}]],
$  "representationsTree":
$      [[{"Name": "words"},
$        [{"rootLabel": {"Set_ExplicitVarSizeWithMarker": []},
$          "subForest":
$              [{"rootLabel": {"Function_AsRelation": {"Relation_AsMatrix": []}},
$                "subForest": [{"rootLabel": null, "subForest": []}, {"rootLabel": null, "subForest": []}]}]}]]],
$  "originalDomains":
$      [[{"Name": "words"},
$        {"DomainSet":
$             [[], {"SizeAttr_None": []},
$              {"DomainFunction":
$                   [[], [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_None"],
$                    {"DomainInt":
$                         [{"TagInt": []},
$                          [{"RangeBounded":
$                                [{"Constant": {"ConstantInt": [{"TagInt": []}, 1]}},
$                                 {"Constant": {"ConstantInt": [{"TagInt": []}, 8]}}]}]]},
$                    {"DomainEnum": [{"Name": "Base"}, null, null]}]}]}]],
$  "trailGeneralised":
$      [[4224108856831461424, -5752374884279752168], [-5416264071379309082, 2468469247912984728],
$       [-1228998915688034542, -8438055240862190397], [-8300056507888977559, -6718983489501555515],
$       [642929852428632962, -7176007301401340271], [-4731439490850939518, -8224459121174830107],
$       [8213890767693858418, -7176007301401340271], [-5089716824148899144, -2821048230105228986],
$       [6902000627239379645, -8763214785657062023], [1485081451038662215, 7050005728455449477],
$       [-6956749479609222885, -2442820975642260004], [2780411736747582871, -6506426558902943345],
$       [-6312561837414576466, -6724691408003202392], [8464488627261304801, 6643068969991713976],
$       [-7007677260630143847, -8438055240862190397], [-7074348807479880866, -7984676408673372607],
$       [-1878276939910401260, 1373817073032391141], [6966695212258035278, 3554958115552999399],
$       [-1389419299272786131, 1373817073032391141], [-5820183624952773731, 7776419212999032834],
$       [8781330402783405011, -5420590702611862862], [2956925867134148161, -3781293859761873399],
$       [-2266960559428833263, -3201247674118547476], [-5692866338331447547, -6182056979093475269],
$       [7583686691108212380, -4670612318752089853], [9095425178822319342, -9006357268685896578],
$       [3919377949207408745, 844549072627129635], [-8116236185681075622, 4730679988580766349],
$       [8809650672295360292, 2336196552924660239], [8521098341720756409, -7381512603113114392],
$       [3289766489682485358, -6228743525025829835], [-4393981432922469058, 1848394466974607590],
$       [7059987596295433849, 7951349409050531049], [-6592510734536472800, -8445645928853487859],
$       [5986355286853075626, 9028016750279868274], [-4636601215087098559, 9028016750279868274],
$       [3715310563520539451, 3322231792759105207], [-4225771017250830377, 3930307071990325844],
$       [-6355718280715193950, 7409461398537251716], [-5402721148256817624, 5533661589255984342],
$       [-1896071137427864683, -2731806717769191123], [-7635995479437521318, 1224581316149711985],
$       [5852564900880275544, 2932160003739606694], [2340749820656755375, 2932160003739606694],
$       [8948732084242338951, 7332275550658333605], [5864304442180088442, 8159100397343792051],
$       [-31291211900811311, 270268085356299596], [-4909945940153257553, -2450793038995255256],
$       [3722788919258075949, 2539847779656043101], [-3473257854824670275, -6876918491529390142],
$       [-4291227075188994807, -3711407031781693521], [7341315439963646412, -2019499570444515907],
$       [-3330832941817331555, -6876918491529390142], [6018299532734377613, -2019499570444515907],
$       [6780913242091931191, -5955095444296779285], [-405097282997784777, -2904775957759838758],
$       [-6402161825586183431, 719200027429166713], [-9214977921287213831, 4077674717415970667],
$       [-1978356308762169026, 5584896436454268405], [8849258396872133960, 7705012975011592766],
$       [-4203813524822045736, -6403500522235659095], [866709529503603697, -8234223572119825591],
$       [1605616091142694136, 7705012975011592766], [5308997330085009982, -8234223572119825591],
$       [2829991064484566622, 8642876588584566797], [-2186769953102357278, -2496017522959660991],
$       [1876518353405572308, -5826316109260126683], [-5423344621988990780, -1976898938415343883],
$       [1473585288186098531, 6667371797860976681], [-7021349803237281862, 4534769123574834853],
$       [-2167571912261905300, 4370329734824752034], [-440675250524291661, 4370329734824752034],
$       [-4854811652998363127, -698746520925019361], [7350755533167907967, -2207126691113770192],
$       [1535993183229849932, 1877466419128277862], [1069663110116719022, -4735022824008774330],
$       [-1294673565784558821, -8953586925335608195], [-8741065715232414872, -78197545753923255],
$       [-8025197769197496366, 4602545244886745646], [-6965573345543191059, 4602545244886745646],
$       [1024327055420082585, -3692307154905103267], [3217031811990738302, -954277341061155769],
$       [-4971508548460447773, -5138176261247956902], [-5052468282469681139, -4086898669485972836],
$       [4234684331250615054, 3501552751126753221], [6271599272620177626, 196757619451916050],
$       [8665146490738660342, -6739854122628250233], [-6498885848657069005, -1213310421168505147],
$       [-5262426130536591946, 196757619451916050], [5335930106004521530, -1213310421168505147],
$       [-6576007153827431824, 8508947777756011539], [1846252139614117918, 240707024558159750],
$       [4111733625979194604, 5925419754489544359], [3907524043483622932, -7870908701067066069],
$       [8013149965766234431, -3357485772761999747], [-6265788011556528331, -2832664906132935450],
$       [2945703965026814293, -6986952254148494487], [-5117409667490716272, 2464216496118362241],
$       [1596751164175081861, -2832664906132935450], [-3914671476902509077, 2464216496118362241],
$       [975989843274920475, -5730800026376794179], [-2740423115094351357, -5319040201659177587],
$       [2920650618119337369, 6786898723802189455], [-2832160383862169887, -7331347183400613827],
$       [-3696391138715561001, -9056026887561438887], [5583866551411404162, 2531425773549270973],
$       [6339267507221583036, 3782185001513378546], [-1854791205838579893, 3782185001513378546],
$       [-6279096212510465987, 6404018760392179527], [520770241256091341, -4331831794480563588],
$       [8800264695360718108, 2495225760889084832], [-5460734576654373886, -7650536554666901146],
$       [1055057542906799007, 4033478644998472349], [9210144362885222320, -6896189795890982319],
$       [4233924977020392046, 2450174240797874726], [4534351087858144317, 2450174240797874726],
$       [6039302320059195853, -3178906401392564027], [7872807175702570220, -5398742278902592901],
$       [2277499967511927711, -2477221500128622136], [-4654580963866488283, 5447795716832437864],
$       [2675738351646457913, -7942030890576897699], [8196079794803533269, -6718969918907706334],
$       [812555414976676217, -4388647571341999537], [5058887309424067112, 4375694642396579021],
$       [6638119754944181189, -6718969918907706334], [-2451563242824267351, 4375694642396579021],
$       [190812366777453231, -3241372743332269429], [5394373107487410059, 3083077388475997522],
$       [8514547298159701025, -3649484436440140683], [8209923388057110253, 6022586607928165403],
$       [3169969740771411650, -975286690524940891], [5566917615630808044, -3692567428524382018],
$       [-2195012227755322904, 2105688504065054665], [2151508909674750473, 2223075596002874201],
$       [-1474796762728389484, -3692567428524382018], [6819913017525537394, 2223075596002874201],
$       [1535556086961506150, -4275565460179939859], [-7168704954377683450, 8224682306070545033],
$       [8861262173030572012, 631720631962816977], [-8160401352825145792, 4598470892092806957],
$       [-2526326248597726963, 4378198308366183449], [-1702925806348865916, 9025047344207077253],
$       [112879660868686930, -6642989284437143742], [1973412779307524553, -6642989284437143742],
$       [1503724336088621511, -4506802415176215873], [3679282423673604873, -6723457685334596232],
$       [1799010260442709198, -2830174639662919654], [-6145567286869171128, 3349175587591362614],
$       [655960254806929, 6295412698235851277], [-9124539234118192330, -5653651423060313831],
$       [-5407644762294013020, -6303531950939303170], [-8567634904208731673, -6303531950939303170],
$       [1790053220527578539, -7359088618685554547], [-8921670554178083440, -2173801570818158161],
$       [-657790493238914851, -8304084197680886082], [-4172294194270403809, 6137897417076938052],
$       [-8529336542365052706, 2986586949303834805], [-6041000487500436714, -3958497240306588526],
$       [5383532320787576674, -1838456123694114505], [-7508909843639167153, -811430638668817915],
$       [-7117488814063363154, -3958497240306588526], [-6504915137115418786, -811430638668817915],
$       [-6983350789564569104, 181973701911961411], [-7316941486511966370, -981905487817668738],
$       [-6283075360189857464, 7018026936815784267], [-230560362618545660, 5796038522970003307],
$       [2810907707110896335, 3078183226000446013], [-5505913084590541995, 4371479831372883094],
$       [6481206598220576041, -5566610993640007927], [-4820170803263781984, 1693174393566381121],
$       [6094953405927682433, 4371479831372883094], [4423215831410801143, 1693174393566381121],
$       [3375947298319508267, -5772764845625457987], [-992779960332289321, -889866164522488971],
$       [8973693550319840553, 1153297270026801411], [-697723458606320235, 3730834890107325189],
$       [-2052911264790683914, -2915892627461983573], [2837882311868889508, -5586900187592261547],
$       [8514084302306416383, 844549072627129635], [5529177047782951955, 844549072627129635],
$       [6775968008670562806, 6571379084709461517], [1393009493713617310, -273537773970012907],
$       [572501494455640806, 4056532927455834914], [-6442763877910817050, 6082216461648496177],
$       [-6562813947230982613, 2310009254850210333], [2420849755281871774, -652000089511502206],
$       [4095007808131464610, -652000089511502206], [8009028007874492638, 6921541260298156623],
$       [3226563154389140192, 8365088808507192302], [7719017333064105540, -8036170531228430422],
$       [-1312880516771302020, -1992859954157647350], [1368275676772851858, -5069691977407964303],
$       [-5902981726751278545, 953900975251712809], [-1742734522812954562, -6993137455989418786],
$       [1954467782481689082, -6993137455989418786], [4814170752407727022, -6924037501884231991],
$       [-2510847377323775702, -4499637392914639459], [-6326026971347667174, 7168150616426059486],
$       [9119570280590617662, 1640287664189546228], [1402094287845038337, 6089894003204583745],
$       [7930642382108737548, 2585199047192731874], [992647201023538078, 7392616529720355423],
$       [-8045262429209624613, -4980267577489519995], [7818722354404241145, 2585199047192731874],
$       [-7540401422414858003, -4980267577489519995], [9099671038541382169, -8766991469604197353],
$       [6930722526810021647, -2405991147529759392], [-7655846385859556865, 7815070376686344411],
$       [940839544454746706, 3291846888601397059], [7357930963513800191, 5723602808675233509],
$       [2599271974105273300, 6181376966036659598], [-5185111648150761156, -6537839749730302083],
$       [6594121759411241591, 2073458303296693001], [-1277950570169088949, 6181376966036659598],
$       [3834788096241820337, 2073458303296693001], [3635357443285068713, -1802002256760151995],
$       [-7824212525130822016, 164158699645260123], [7597501930768695594, -7086738582660964581],
$       [-4913792028578261255, 259426160273491921], [3075788230791769028, -2985764831149320376],
$       [6808135427491328804, 3937146395424350826], [-40403201771157369, 844549072627129635],
$       [6764202495573677059, 844549072627129635], [-2612503175271350428, 8088791186633344036],
$       [7398821841365581657, 2194690342764995544], [3035836865544439292, 4753385192976400594],
$       [-7961017778836195557, -7740812894544148154], [-1343168769829748637, 7286520137830083975],
$       [-8880129765802121958, -2681226898098024586], [7810828904579760338, 3704908382311592034],
$       [-9121117600717284497, 8107570972780942743], [1452125345682595049, -4268803437843743558],
$       [-2952718096766723204, -8486449417468645201], [-831509215888160121, -4825885200993954456],
$       [7941964842275964181, -8438055240862190397], [-4425222295775109521, -2205172563643284095],
$       [-1973468306145636959, -507208888453907278], [-4205091200319078043, -4603608912773652457],
$       [2598611933722318542, -8895826459465012795], [6042889216149044895, -507208888453907278],
$       [-4273362797029429335, -1295029680472704688], [5990124336642814303, -8368462655662989419],
$       [-9012130468759597224, -4913133441956961090], [-3918497577712161402, -1550926176577655608],
$       [-1272503189550968695, 844549072627129635], [1484607083429204330, -7929000906344391468],
$       [4499720728143595823, -7929000906344391468], [-8462151014789633815, -3962448320778461974],
$       [-1204737829773037152, 5376601106287919814], [-6126782313414826892, 292656822000956756],
$       [-3892256640413025584, -7862708230357712018], [-8361626505561849652, -1141025707572127499],
$       [7301306680445706967, 3149992604467079513], [1282364960484333804, 8769888789608900107],
$       [6636028433009708228, 4143558465206462893], [3649014172559677571, 844549072627129635],
$       [-1885331541323965539, -5799008174048503898], [3252187536847442371, -539939369857358442],
$       [4515573266064284881, 3722930438940389872], [2072619623888817873, 1926394812438793390],
$       [4010264827194431599, 1988263381784907064], [-1065526325584178197, 4972021349515884771],
$       [-8327629362345042958, 4736244855892996135], [2609985185351648137, 9042878499635397242],
$       [-1397984365655380323, -7210211665791462980], [-2625467269038285906, -8060315710814965893],
$       [-2459814106020253629, -6527899941693386323], [-961030371235098653, 1622732238480664989],
$       [-3672513725634117885, -3565971223609832411], [40766486881221939, 6376278743243277253],
$       [-2152054701690231362, 4317187042988594446], [747871836314834930, -1195343004993472650],
$       [-4767400296006301606, -6105585973009413538], [9004621952624786446, 8972016594690002574],
$       [5300760539042555542, 7766471826989735322], [-3116844827615712042, 5888783564767418486],
$       [3285867286235637906, 6407404733536403150], [-6115612886868132658, -6371701229819358754],
$       [-2832278707547514214, 7743440501376849402], [2835087312867510965, 4542611319350818373],
$       [158756448288492685, -5352277176235584848], [-7404699851525237203, -3122894798699722651],
$       [-8102089670101855274, 2032689881662032330], [-4933237145590298860, -7217375032147232776],
$       [-8282303230956735644, 5983584925524566850], [3016001691337730905, 2187518706252146614],
$       [5589768837774957896, 5039772131320693526], [-3070558045450496245, -5335883564060552278],
$       [7639274832191384331, 7249920119014920146], [-8647056083452393752, -1914811413078627762],
$       [446574966941282757, 1591837127261837829], [1211673928885397053, 4772392650798542688],
$       [-7346915922496598051, 8401721445864342557], [2765495618109502132, -8790519702603285134],
$       [-165280828209673588, -6532524754427937504], [7275029145750408464, 5757418326757820908],
$       [4532031831465707443, 1227261083323514204], [7463319081826524584, -46337946587287038],
$       [723740793448823483, -2700105439361247924], [7943835767919349985, -5757078756596903580],
$       [1664049963879315714, -543643409241033106], [-6517791745967060175, 7153105582552897877],
$       [4169065216880260565, 121648693465469584], [6090889567873314069, -5684451479515173083],
$       [7119297178279750818, -2161168050674010574], [-8921274977244683808, -7196712603633453648],
$       [-5378994438926780584, 3165680025614659846], [371333483221639213, 6207484827955417434],
$       [3359180420827963624, 7656167908677892518], [4835845619025439687, 8870682947170499102],
$       [-3158665883214252709, -2506574681486708738], [525626367326359704, -6512223638933909434],
$       [3937489899135882901, -2812503213566520195], [3488720004672152769, 4776095722594021256],
$       [-6273240506570205215, -4609631394072141363], [1148525103795951316, -6753030801907556422],
$       [331028734168382220, 607321722164155656], [-5826226596321795260, 7279712434396807504],
$       [5043766151011462435, 6050860934513412208], [942809246114134188, -8996698275472033974],
$       [-193985470459987177, 7929956090348846416], [1547826963399987429, -5834347067386646608],
$       [-5974304138920096866, -998208003437133042], [-2963172373096311725, 7883307033547691216],
$       [4821019676655049916, 150677928447120776], [2315902250835146108, 6722557971222935203],
$       [5337090512820883018, -6141856191164747424], [-6319969289188037925, 7633310754361290479]],
$  "trailVerbose": [], "trailRewrites": []}
